{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-]","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"README","text":""},{"location":"#_1","title":"\u4ecb\u7ecd","text":"<p>\u6211\u7684\u7b14\u8bb0\uff0c\u8bb0\u5f55\u4e00\u4e9b\u6700\u8fd1\u5b66\u4e60\u7684/\u6709\u4ef7\u503c\u590d\u4e60\u7684\u4e1c\u897f</p>"},{"location":"#_2","title":"\u62c9\u53d6\u7b14\u8bb0","text":"GitHubGitee <pre><code>git clone git@github.com:mjw879/my-note.git\n</code></pre> <pre><code>git clone git@gitee.com:ma879/my-note.git\n</code></pre>"},{"location":"#_3","title":"\u90e8\u7f72","text":"<p>\u53c2\u8003\uff1a 1. \u5efa\u7acb\u7f51\u7ad9 2. \u90e8\u7f72\u7f51\u7ad9\u5230github page </p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/","title":"\u57fa\u672c\u914d\u7f6e","text":"<pre><code>cmake_minimum_required(VERSION 3.15)\nproject(Demo)\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_2","title":"\u751f\u6210\u53ef\u6267\u884c\u6587\u4ef6","text":"<pre><code>add_executable(${PROJECT_NAME} ${PROJECT_SOURCE_DIR}/main.cpp)\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_3","title":"\u591a\u76ee\u5f55","text":"<pre><code>include_directories(${CMAKE_SOURCE_DIR}/include)\naux_source_directory(${CMAKE_SOURCE_DIR}/source source_dir)\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_4","title":"\u751f\u6210\u5e93","text":""},{"location":"CMake/%E6%80%BB%E7%BB%93/#_5","title":"\u9759\u6001\u5e93\uff1a","text":"<pre><code>add_library(myFunc_static STATIC ${SRC_LIST})\nset_target_properties(myFunc_static PROPERTIES OUTPUT_NAME \"myFunc\")\n</code></pre>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_6","title":"\u52a8\u6001\u5e93","text":"<pre><code>add_library(myFunc_shared SHARED ${SRC_LIST})\nset_target_properties(myFunc_shared PROPERTIES OUTPUT_NAME \"myFunc\")\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_7","title":"\u94fe\u63a5\u5e93","text":"<pre><code>find_library(myLib libmyFunc.a HINTS ${PROJECT_SOURCE_DIR}/lib) # \u5728\u6307\u5b9a\u76ee\u5f55\u4e0b\u67e5\u627e\u6307\u5b9a\u5e93\uff0c\u5e76\u628a\u5e93\u7684\u7edd\u5bf9\u8def\u5f84\u5b58\u653e\u5230\u53d8\u91cf\u91cc\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u53d8\u91cf\u540d\u79f0\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5e93\u540d\u79f0\uff0c\u7b2c\u4e09\u4e2a\u53c2\u6570\u662fHINTS\uff0c\u7b2c4\u4e2a\u53c2\u6570\u662f\u8def\u5f84\ntarget_link_libraries(main ${myLib}) # \u628a\u76ee\u6807\u6587\u4ef6\u4e0e\u5e93\u6587\u4ef6\u8fdb\u884c\u94fe\u63a5\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_8","title":"\u8bbe\u7f6e\u7f16\u8bd1\u9009\u9879","text":"<pre><code>add_compile_options(-std=c++11 -Wall)\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_9","title":"\u6dfb\u52a0\u63a7\u5236\u9009\u9879","text":"<pre><code>option(IS_BUILD_MAIN1 \"build main1.cpp or main2.cpp\" OFF) # \u547d\u4ee4\u884c\u8fd0\u884c `cmake .. -DIS_BUILD_MAIN1=ON` \u6765\u63a7\u5236\u8be5option  \nadd_compile_options(-DmyDefine1) # \u5b8f\u5b9a\u4e49\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#set","title":"set","text":"<pre><code>set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin) # \u53ef\u6267\u884c\u6587\u4ef6\u8f93\u51fa\u8def\u5f84\nset(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib) # \u8bbe\u7f6e\u4ea7\u7269\u5e93\u7684\u8f93\u51fa\u8def\u5f84\nset(CMAKE_CXX_STANDARD 11) # \u914d\u7f6e\u6307\u5b9aC++11\u7f16\u8bd1\u7684\u6807\u51c6\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_10","title":"\u5b8f\u5b9a\u4e49","text":"<pre><code>CMAKE_HOST_SYSTEM_NAME      #\u64cd\u4f5c\u7cfb\u7edf\u7c7b\u578b\nCMAKE_HOST_SYSTEM_PROCESSOR # cpu \u6307\u4ee4\u96c6\nPROJECT_SOURCE_DIR # \u5305\u542b\u6700\u65b0\u7684 project\uff08\uff09\u547d\u4ee4\u7684\u76ee\u5f55\nCMAKE_SOURCE_DIR # \u9876\u7ea7CMakeLists.txt\u7684\u6587\u4ef6\u76ee\u5f55\n</code></pre> <p><code>&lt;br&gt;&lt;/br&gt;</code></p>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_11","title":"\u5b57\u7b26\u4e32\u6bd4\u8f83","text":"<pre><code>if (${CMAKE_HOST_SYSTEM_NAME} MATCHES Linux)\n</code></pre>"},{"location":"CMake/%E6%80%BB%E7%BB%93/#_12","title":"\u4ea4\u53c9\u7f16\u8bd1\u5668","text":"<p>\u5f85\u8865\u5145\uff1ahttps://zhuanlan.zhihu.com/p/100367053</p>"},{"location":"GCC/gcc_g%2B%2B/","title":"Gcc g++","text":"<pre><code>-g # \u751f\u6210\u8c03\u8bd5\u4fe1\u606f,\u8be5\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u8c03\u8bd5\u5668\u8c03\u8bd5\n-Wall # \u4f7f\u80fd\u6240\u6709\u8b66\u544a\n# \u5176\u4ed6\u8b66\u544a\u7c7b\u578b\n-Wcomment  #\u51fa\u73b0\u6ce8\u91ca\u5d4c\u5957\u65f6\u53d1\u51fa\u8b66\u544a\u3002\n-Wconversion  #\u5982\u679c\u7a0b\u5e8f\u4e2d\u5b58\u5728\u9690\u5f0f\u7c7b\u578b\u8f6c\u6362\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wformat  #\u68c0\u67e5printf\u548cscanf\u7b49\u683c\u5f0f\u5316\u8f93\u5165\u8f93\u51fa\u51fd\u6570\u7684\u683c\u5f0f\u5b57\u7b26\u4e32\u548c\u53c2\u6570\u7c7b\u578b\u7684\u5339\u914d\u60c5\u51b5\uff0c\u5982\u679c\u53d1\u73b0\u4e0d\u5339\u914d\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Winline  #\u5982\u679c\u51fd\u6570\u4e0d\u80fd\u88ab\u5185\u8054\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wlong-long  #\u5982\u679c\u4f7f\u7528\u4e86long long\u578b\u6570\u636e\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wmain  #\u5982\u679cmain\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e0d\u662fint\u578b\uff0c\u6216\u8005\u8c03\u7528main\u51fd\u6570\u65f6\u4f7f\u7528\u7684\u53c2\u6570\u6570\u76ee\u4e0d\u6b63\u786e\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wmissing-declarations  #\u5982\u679c\u5b9a\u4e49\u4e86\u5168\u5c40\u51fd\u6570\uff0c\u4f46\u5374\u6ca1\u6709\u5728\u5934\u6587\u4ef6\u4e2d\u58f0\u660e\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wparentheses  #\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5ffd\u7565\u6389\u4e86\u62ec\u53f7\uff0c\u5219\u4f1a\u53d1\u51fa\u8b66\u544a\u3002\n-Wreturn-type  #\u5982\u679c\u51fd\u6570\u5b9a\u4e49\u4e86\u8fd4\u56de\u7c7b\u578b\uff0c\u800c\u9ed8\u8ba4\u7c7b\u578b\u662fint\u578b\uff0c\u7f16\u8bd1\u5668\u4f1a\u53d1\u51fa\u8b66\u544a\u3002\n-Wuninitialized  #\u5982\u679c\u4f7f\u7528\u7684\u81ea\u52a8\u53d8\u91cf\u6ca1\u6709\u88ab\u521d\u59cb\u5316\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wundef  #\u5982\u679c\u5728#if\u5b8f\u4e2d\u4f7f\u7528\u4e86\u672a\u5b9a\u4e49\u7684\u53d8\u91cf\u505a\u5224\u65ad\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n-Wunused  #\u5982\u679c\u58f0\u660e\u7684\u53d8\u91cf\u6216static\u578b\u51fd\u6570\u6ca1\u6709\u4f7f\u7528\uff0c\u5219\u53d1\u51fa\u8b66\u544a\u3002\n</code></pre>"},{"location":"Git/git/","title":"git\u4f7f\u7528\u7b14\u8bb0","text":""},{"location":"Git/git/#_1","title":"\u64a4\u9500\u5de5\u4f5c\u533a\u7684\u4fee\u6539","text":"<p><code>git checkout .</code></p>"},{"location":"Git/git/#_2","title":"\u64a4\u9500\u6682\u5b58\u533a\u7684\u4fee\u6539","text":"<p><code>git reset HEAD</code></p>"},{"location":"Git/git/#tracked","title":"\u5220\u9664\u6240\u6709\u6ca1\u6709 tracked\uff0c\u6ca1\u6709\u88ab\u7ba1\u7406\u8fc7\u7684\u6587\u4ef6","text":"<p><code>git clean</code></p>"},{"location":"Git/git/#_3","title":"\u5207\u6362\u5206\u652f\u524d \u4fdd\u5b58/\u6062\u590d \u5f53\u524d\u5de5\u4f5c\u73b0\u573a","text":"<p>\u4fdd\u5b58: <code>git stash</code></p> <p>\u6062\u590d: <code>git stash pop</code></p>"},{"location":"Git/git/#_4","title":"\u5207\u6362\u8fdc\u7a0b\u5206\u652f","text":"<p><code>git switch {\u8fdc\u7a0b\u5206\u652f\u540d}</code> \u6216\u8005 <code>git checkout -b {\u672c\u5730\u5206\u652f\u540d} origin/{\u8fdc\u7a0b\u5206\u652f\u540d}</code></p>"},{"location":"Git/git/#_5","title":"\u7248\u672c\u56de\u9000","text":"<p><code>git reset HEAD^</code> <code>git reset HEAD^^</code> <code>git reset HEAD~100</code> <code>git reset {hash}</code> </p>"},{"location":"Git/git/#commit-comment","title":"\u4fee\u6539commit comment","text":""},{"location":"Git/git/#1commit-comment","title":"1.\u4fee\u6539\u6700\u8fd1\u4e00\u6b21commit comment","text":"<p><code>git commit --amend</code></p>"},{"location":"Git/git/#_6","title":"\u5408\u5e76\u591a\u4e2a\u63d0\u4ea4","text":"<p>\u5408\u5e76\u4e0b\u56fe7\u4e2acommit </p> <ol> <li>\u627e\u5230\u524d\u4e00\u4e2a\uff08\u7b2c8\u4e2a\uff09commit    \u8fd0\u884c\u547d\u4ee4\uff1a<code>git rebase -i 6394dc</code></li> <li>\u4fee\u6539\u6bcf\u4e00\u884c(\u9664\u4e86\u7b2c\u4e00\u884c)\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcdpick\u4e3as\uff0c\u5982\u4e0b\u56fe    </li> <li>\u4fdd\u5b58\u5173\u95ed\u4fee\u6539\u540e\uff0c\u4fee\u6539\u5f39\u51fa\u6846\u7684commit comment\u4fe1\u606f\uff0c\u4fdd\u5b58\u5173\u95ed</li> </ol> <p>pick\uff1a\u4fdd\u7559\u8be5 commit squash\uff1a\u5c06\u8be5 commit \u548c\u524d\u4e00\u4e2a commit \u5408\u5e76</p>"},{"location":"Git/git/#_7","title":"\u63a8\u9001\u672c\u5730\u5206\u652f\u5230\u8fdc\u7a0b","text":"<p><code>git push origin {\u5206\u652f\u540d}</code></p>"},{"location":"Git/git/#_8","title":"\u5220\u9664\u8fdc\u7a0b\u5206\u652f","text":"<p><code>git push origin --delete {\u5206\u652f\u540d}</code></p>"},{"location":"Git/git/#_9","title":"\u5206\u652f\u91cd\u547d\u540d","text":"<ol> <li> <p>\u91cd\u547d\u540d\u5f53\u524d\u5206\u652f <code>git branch -m {\u65b0\u5206\u652f\u540d}</code></p> </li> <li> <p>\u975e\u5f53\u524d\u5206\u652f <code>git branch -m {\u65e7\u5206\u652f\u540d} {\u65b0\u5206\u652f\u540d}</code></p> </li> </ol>"},{"location":"Git/git/#gitignore","title":".gitignore\u6587\u4ef6\u4e0d\u8d77\u4f5c\u7528","text":"<ol> <li>\u8fdb\u5165\u9879\u76ee\u8def\u5f84</li> <li>\u6e05\u9664\u672c\u5730\u5f53\u524d\u7684Git\u7f13\u5b58    <code>git rm -r --cached .</code></li> <li>\u5e94\u7528.gitignore\u7b49\u672c\u5730\u914d\u7f6e\u6587\u4ef6\u91cd\u65b0\u5efa\u7acbGit\u7d22\u5f15    <code>git add .</code></li> <li>\uff08\u53ef\u9009\uff09\u63d0\u4ea4\u5f53\u524dGit\u7248\u672c\u5e76\u5907\u6ce8\u8bf4\u660e    <code>git commit -m 'update .gitignore'</code></li> </ol>"},{"location":"Introduction_to_Algorithms/","title":"\u7b97\u6cd5\u5bfc\u8bba","text":"<p><code>\u7b97\u6cd5\u5bfc\u8bba\uff08\u4e2d\u6587\uff09\u7b2c\u4e09\u7248</code>\u4e2d\u6d89\u53ca\u5230\u7684\u9898\u76ee</p>"},{"location":"Introduction_to_Algorithms/2.basic/","title":"\u7b97\u6cd5\u57fa\u7840","text":""},{"location":"Introduction_to_Algorithms/2.basic/#_2","title":"\u9006\u5e8f\u5bf9","text":"<p>\u5728\u6570\u7ec4\u4e2d\u7684\u4e24\u4e2a\u6570\u5b57\uff0c\u5982\u679c\u524d\u9762\u4e00\u4e2a\u6570\u5b57\u5927\u4e8e\u540e\u9762\u7684\u6570\u5b57\uff0c\u5219\u8fd9\u4e24\u4e2a\u6570\u5b57\u7ec4\u6210\u4e00\u4e2a\u9006\u5e8f\u5bf9\u3002\u8f93\u5165\u4e00\u4e2a\u6570\u7ec4\uff0c\u6c42\u51fa\u8fd9\u4e2a\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9\u7684\u603b\u6570\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165: [7,5,6,4]\n\u8f93\u51fa: 5\n</code></pre> \u601d\u8def <ol> <li>\u5f52\u5e76\u6392\u5e8f  </li> <li>\u5728\u5de6\u53f3\u4e24\u5757\u5408\u5e76\u8fc7\u7a0b\u4e2d\uff0c\u8981\u5408\u5e76\u5de6\u5757\u67d0\u4e2a\u70b9\u65f6\uff0c\u8ba1\u7b97\u53f3\u5757\u5df2\u7ecf\u5408\u5e76\u4e86\u591a\u5c11\u4e2a\u70b9\uff08\u4e5f\u5c31\u662f\u9006\u5e8f\u5bf9\uff09</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def reversePairs(self, nums: List[int]) -&gt; int:\n        def f(nums):\n            if len(nums)&lt;=1:\n                return nums,0\n            mid=len(nums)//2\n            left,r1=f(nums[:mid])\n            right,r2=f(nums[mid:])\n            i,j=0,0\n            r=r1+r2\n            res=[]\n            while i&lt;len(left) and j&lt;len(right):\n                if left[i]&lt;=right[j]:\n                    res.append(left[i])\n                    i+=1\n                    r+=j\n                else:\n                    res.append(right[j])\n                    j+=1\n            while i&lt;len(left):\n                res.append(left[i])\n                i+=1\n                r+=j\n            while j&lt;len(right):\n                res.append(right[j])\n                j+=1\n            return res,r\n        return f(nums)[1]\n</code></pre>"},{"location":"Introduction_to_Algorithms/4.partition/","title":"\u5206\u6cbb\u7b56\u7565","text":""},{"location":"Introduction_to_Algorithms/4.partition/#_2","title":"\u6700\u5927\u5b50\u6570\u7ec4\u95ee\u9898","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u8bf7\u4f60\u627e\u51fa\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002</p> <p>\u5b50\u6570\u7ec4 \u662f\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u8fde\u7eed\u90e8\u5206\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [-2,1,-3,4,-1,2,1,-5,4]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u8fde\u7eed\u5b50\u6570\u7ec4\u00a0[4,-1,2,1] \u7684\u548c\u6700\u5927\uff0c\u4e3a\u00a06 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1]\n\u8f93\u51fa\uff1a1\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [5,4,-1,7,8]\n\u8f93\u51fa\uff1a23\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= nums.length &lt;= 105 -104 &lt;= nums[i] &lt;= 104</p> \u601d\u8def <p>\u5047\u5982\u5c06\u6570\u7ec4\u5747\u5206\u6210\u5de6\u53f3\u4e24\u5757 \u90a3\u4e48\u6700\u5927\u5b50\u6570\u7ec4\u4f1a\u51fa\u73b0\u5728\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\u4e4b\u4e00\uff1a 1. \u53ea\u51fa\u73b0\u5728\u5de6\u5757 2. \u53ea\u51fa\u73b0\u5728\u53f3\u5757 3. \u6a2a\u7a7f\u5de6\u53f3\u4e24\u5757</p> <p>\u5bf9\u4e0d\u540c\u60c5\u51b5\u4f5c\u4ee5\u4e0b\u5904\u7406 1. \u9012\u5f52\u5de6\u5757\uff0c\u6c42\u5de6\u5757\u4e2d\u7684\u6700\u5927\u5b50\u6570\u7ec4\uff0c\u7f29\u5c0f\u95ee\u9898\u89c4\u6a21 2. \u9012\u5f52\u53f3\u5757\uff0c\u6c42\u53f3\u5757\u4e2d\u7684\u6700\u5927\u5b50\u6570\u7ec4\uff0c\u7f29\u5c0f\u95ee\u9898\u89c4\u6a21 3. \u4ece\u4e2d\u95f4\u51fa\u53d1\uff0c\u5206\u522b\u5411\u5de6\u53f3\u67e5\u627e\u6700\u5927\u5b50\u6570\u7ec4</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def maxSubArray(self, nums: List[int]) -&gt; int:\n        def MSA_Crossing(left,right):\n            if left==right:\n                return nums[left]\n\n            mid=(left+right)//2\n            maxLeft=sumLeft=nums[mid]\n            for i in range(mid-1,left-1,-1):\n                sumLeft+=nums[i]\n                if sumLeft&gt;maxLeft:\n                    maxLeft=sumLeft\n\n            maxRight=sumRight=nums[mid+1]\n            for i in range(mid+2,right+1):\n                sumRight+=nums[i]\n                if sumRight&gt;maxRight:\n                    maxRight=sumRight\n\n            return maxLeft+maxRight\n\n        def MSA(left,right):\n            if left==right:\n                return nums[left]\n            mid=(left+right)//2\n            maxLeft=MSA(left,mid)\n            maxRight=MSA(mid+1,right)\n            cross=MSA_Crossing(left,right)\n            return max(maxLeft,maxRight,cross)\n        return MSA(0,len(nums)-1)\n</code></pre>"},{"location":"LaTex/LaTex/","title":"LaTex","text":""},{"location":"LaTex/LaTex/#_1","title":"\u884c\u5185\u516c\u5f0f","text":"<p>\\(a+b&gt;c\\) </p> <p><code>$a+b&gt;c$</code></p>"},{"location":"LaTex/LaTex/#_2","title":"\u884c\u95f4\u516c\u5f0f","text":"\\[ a+b&gt;c \\] <pre><code>$$\na+b&gt;c\n$$\n</code></pre>"},{"location":"LaTex/LaTex/#_3","title":"\u7b26\u53f7","text":"\u6548\u679c LaTex \\(\\vec{a}\\) <code>$\\vec{a}$</code> \\(\\overline{a}\\) <code>$\\overline{a}$</code> \\(a\\cdot b\\) <code>$a\\cdot b$</code> \\(a\\times b\\) <code>$a\\times b$</code> \\(a\\div b\\) <code>$a\\div b$</code> \\(\\sqrt[3]{x}\\) <code>$\\sqrt[3]{x}$</code> \\(\\le\\) <code>$\\le$</code> \\(\\ge\\) <code>$\\ge$</code> \\(\\gg\\) <code>$\\gg$</code> \\(\\approx\\) <code>$\\approx$</code> \\(\\ne\\) <code>$\\ne$</code> \\(\\subset\\) <code>$\\subset$</code> \\(\\subseteq\\) <code>$\\subseteq$</code> \\(\\supset\\) <code>$\\supset$</code> \\(\\supseteq\\) <code>$\\supseteq$</code> \\(\\cup\\) <code>$\\cup$</code> \\(\\cap\\) <code>$\\cap$</code> \\(\\in\\) <code>$\\in$</code> \\(\\notin\\) <code>$\\notin$</code>"},{"location":"LaTex/LaTex/#_4","title":"\u5b57\u6bcd","text":"\u6548\u679c LaTex \\(\\pi\\) <code>$\\pi$</code> \\(\\alpha\\) <code>$\\alpha$</code> \\(\\beta\\) <code>$\\beta$</code> \\(\\gamma\\) <code>$\\gamma$</code> \\(\\delta\\) <code>$\\delta$</code> \\(\\theta\\) <code>$\\theta$</code> \\(\\lambda\\) <code>$\\lambda$</code> \\(\\mu\\) <code>$\\mu$</code> \\(\\sigma\\) <code>$\\sigma$</code> \\(\\upsilon\\) <code>$\\upsilon$</code> \\(\\omega\\) <code>$\\omega$</code>"},{"location":"LaTex/LaTex/#_5","title":"\u4e0a\u4e0b\u6807","text":"\u6548\u679c LaTex \\(a^b\\) <code>$a^b$</code> \\(ab+{bc}^{123}\\) <code>$ab+{bc}^{123}$</code>"},{"location":"LaTex/LaTex/#_6","title":"\u5206\u5f0f","text":"<p>\\(\\dfrac{abc}{123}\\)</p> <p><code>$\\dfrac{abc}{123}$</code></p>"},{"location":"LaTex/LaTex/#_7","title":"\u62ec\u53f7","text":"<p>\\((\\dfrac{123}{bcd})\\)</p> <p><code>$(\\dfrac{123}{bcd})$</code></p> <p>\\(\\left(\\dfrac{123}{bcd}\\right)\\)</p> <p><code>$\\left(\\dfrac{123}{bcd}\\right)$</code></p>"},{"location":"LaTex/LaTex/#_8","title":"\u5927\u62ec\u53f7","text":"\\[ f(x)= \\begin{cases}     x, &amp; x&gt;0, \\\\     -x, &amp; x\\leq 0. \\end{cases} \\] <pre><code>$$\nf(x)=\n\\begin{cases}\n    x, &amp; x&gt;0, \\\\\n-x, &amp; x\\leq 0.\n\\end{cases}\n$$\n</code></pre>"},{"location":"LaTex/LaTex/#_9","title":"\u591a\u884c\u516c\u5f0f","text":"\\[ \\begin{aligned} a &amp; =b+c \\\\   &amp; =d+e \\end{aligned} \\] <pre><code>$$\n\\begin{aligned}\na &amp; =b+c \\\\\n  &amp; =d+e\n\\end{aligned}\n$$\n</code></pre>"},{"location":"LaTex/LaTex/#_10","title":"\u77e9\u9635\u548c\u884c\u5217\u5f0f","text":"\\[ \\begin{bmatrix}     a &amp; b \\\\     c &amp; d \\end{bmatrix} \\] <pre><code>$$\n\\begin{bmatrix}\n    a &amp; b \\\\\n    c &amp; d\n\\end{bmatrix}\n$$\n</code></pre> \\[ \\begin{pmatrix}     a &amp; b \\\\     c &amp; d \\end{pmatrix} \\] <pre><code>$$\n\\begin{pmatrix}\n    a &amp; b \\\\\n    c &amp; d\n\\end{pmatrix}\n$$\n</code></pre>"},{"location":"LaTex/LaTex/#_11","title":"\u6c42\u548c\u7b26\u53f7","text":"\\[ \\sum_{i=0}^{n}{a_i} \\] <pre><code>$$\n\\sum_{i=0}^{n}{a_i}\n$$\n</code></pre> \\[ \\sum_{\\substack{i=0\\\\j=0}}^{\\substack{i&lt;n\\\\j&lt;0}}{a_{ij}} \\] <pre><code>$$\n\\sum_{\\substack{i=0\\\\j=0}}^{\\substack{i&lt;n\\\\j&lt;0}}{a_{ij}}\n$$\n</code></pre>"},{"location":"LeetCode/BFS/","title":"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22","text":""},{"location":"LeetCode/BFS/#_2","title":"\u83b7\u53d6\u6240\u6709\u94a5\u5319\u7684\u6700\u77ed\u8def\u5f84","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u7ef4\u7f51\u683c grid \uff0c\u5176\u4e2d\uff1a</p> <ul> <li>'.' \u4ee3\u8868\u4e00\u4e2a\u7a7a\u623f\u95f4</li> <li>'#' \u4ee3\u8868\u4e00\u5835</li> <li>'@' \u662f\u8d77\u70b9</li> <li>\u5c0f\u5199\u5b57\u6bcd\u4ee3\u8868\u94a5\u5319</li> <li>\u5927\u5199\u5b57\u6bcd\u4ee3\u8868\u9501</li> </ul> <p>\u6211\u4eec\u4ece\u8d77\u70b9\u5f00\u59cb\u51fa\u53d1\uff0c\u4e00\u6b21\u79fb\u52a8\u662f\u6307\u5411\u56db\u4e2a\u57fa\u672c\u65b9\u5411\u4e4b\u4e00\u884c\u8d70\u4e00\u4e2a\u5355\u4f4d\u7a7a\u95f4\u3002\u6211\u4eec\u4e0d\u80fd\u5728\u7f51\u683c\u5916\u9762\u884c\u8d70\uff0c\u4e5f\u65e0\u6cd5\u7a7f\u8fc7\u4e00\u5835\u5899\u3002\u5982\u679c\u9014\u7ecf\u4e00\u4e2a\u94a5\u5319\uff0c\u6211\u4eec\u5c31\u628a\u5b83\u6361\u8d77\u6765\u3002\u9664\u975e\u6211\u4eec\u624b\u91cc\u6709\u5bf9\u5e94\u7684\u94a5\u5319\uff0c\u5426\u5219\u65e0\u6cd5\u901a\u8fc7\u9501\u3002</p> <p>\u5047\u8bbe k \u4e3a \u94a5\u5319/\u9501 \u7684\u4e2a\u6570\uff0c\u4e14\u6ee1\u8db3 1 &lt;= k &lt;= 6\uff0c\u5b57\u6bcd\u8868\u4e2d\u7684\u524d k \u4e2a\u5b57\u6bcd\u5728\u7f51\u683c\u4e2d\u90fd\u6709\u81ea\u5df1\u5bf9\u5e94\u7684\u4e00\u4e2a\u5c0f\u5199\u548c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3002\u6362\u8a00\u4e4b\uff0c\u6bcf\u4e2a\u9501\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u94a5\u5319\uff0c\u6bcf\u4e2a\u94a5\u5319\u4e5f\u6709\u552f\u4e00\u5bf9\u5e94\u7684\u9501\u3002\u53e6\u5916\uff0c\u4ee3\u8868\u94a5\u5319\u548c\u9501\u7684\u5b57\u6bcd\u4e92\u4e3a\u5927\u5c0f\u5199\u5e76\u6309\u5b57\u6bcd\u987a\u5e8f\u6392\u5217\u3002</p> <p>\u8fd4\u56de\u83b7\u53d6\u6240\u6709\u94a5\u5319\u6240\u9700\u8981\u7684\u79fb\u52a8\u7684\u6700\u5c11\u6b21\u6570\u3002\u5982\u679c\u65e0\u6cd5\u83b7\u53d6\u6240\u6709\u94a5\u5319\uff0c\u8fd4\u56de -1 \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1agrid = [\"@.a.#\",\"###.#\",\"b.A.B\"]\n\u8f93\u51fa\uff1a8\n\u89e3\u91ca\uff1a\u76ee\u6807\u662f\u83b7\u5f97\u6240\u6709\u94a5\u5319\uff0c\u800c\u4e0d\u662f\u6253\u5f00\u6240\u6709\u9501\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1agrid = [\"@..aA\",\"..B#.\",\"....b\"]\n\u8f93\u51fa\uff1a6\n</code></pre> <p>\u793a\u4f8b 3:</p> <p></p> <pre><code>\u8f93\u5165: grid = [\"@Aa\"]\n\u8f93\u51fa: -1\n</code></pre> <p>\u63d0\u793a\uff1a m == grid.length n == grid[i].length 1 &lt;= m, n &lt;= 30 grid[i][j] \u53ea\u542b\u6709 '.', '#', '@', 'a'-'f' \u4ee5\u53ca 'A'-'F' \u94a5\u5319\u7684\u6570\u76ee\u8303\u56f4\u662f [1, 6]  \u6bcf\u4e2a\u94a5\u5319\u90fd\u5bf9\u5e94\u4e00\u4e2a \u4e0d\u540c \u7684\u5b57\u6bcd \u6bcf\u4e2a\u94a5\u5319\u6b63\u597d\u6253\u5f00\u4e00\u4e2a\u5bf9\u5e94\u7684\u9501  </p> \u601d\u8def <ol> <li>\u6c42\u6700\u77ed\u8def\u5f84\uff08\u7528BFS\uff09</li> <li>\u5b58\u5728\u91cd\u590d\u7ecf\u8fc7\u4e00\u4e2a\u70b9\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u72b6\u6001\u538b\u7f29\u8fc7\u6ee4\uff08\u5982\u679c\u5728\u8fd9\u4e2a\u70b9\u62e5\u6709\u4e0d\u540c\u7684\u94a5\u5319\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\uff0c\u5426\u5219\u4e0d\u80fd\u901a\u8fc7\uff09</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def shortestPathAllKeys(self, grid: List[str]) -&gt; int:\n        iStart,jStart=-1,-1\n        key=0\n        for i in range(len(grid)):\n            for j in range(len(grid[0])):\n                if grid[i][j]=='@':\n                    iStart,jStart=i,j\n                elif 'a'&lt;=grid[i][j]&lt;='z':\n                    t=ord(grid[i][j])-ord('a')\n                    key|=(1&lt;&lt;t)\n        dist=dict()\n        state=0\n        dist[(iStart,jStart,state)]=0\n        q=deque([[iStart,jStart,state]])\n        while len(q):\n            i,j,state=q.popleft()            \n            for x,y in [[i,j-1],[i,j+1],[i-1,j],[i+1,j]]:\n                if 0&lt;=x&lt;len(grid) and 0&lt;=y&lt;len(grid[0]) and grid[x][y]!='#':\n                    if not grid[x][y].isalpha(): # . @\n                        if (x,y,state) not in dist:\n                            dist[(x,y,state)]=dist[(i,j,state)]+1\n                            q.append([x,y,state])\n                    else:\n                        if grid[x][y].islower(): # key\n                            t=ord(grid[x][y])-ord('a')\n                            t=state|(1&lt;&lt;t)\n                            if (x,y,t) not in dist:\n                                dist[(x,y,t)]=dist[(i,j,state)]+1\n                                q.append([x,y,t])\n                                if t==key:\n                                    return dist[(x,y,t)]\n                        else: # lock\n                            t=ord(grid[x][y])-ord('A')\n                            if (state&gt;&gt;t)&amp;1 and (x,y,state) not in dist:\n                                dist[(x,y,state)]=dist[(i,j,state)]+1\n                                q.append([x,y,state])\n        return -1\n</code></pre>"},{"location":"LeetCode/bit/","title":"\u4f4d\u8fd0\u7b97","text":""},{"location":"LeetCode/bit/#_2","title":"\u6709\u7b26\u53f7\u4f4d\u53d6\u53cd","text":"<pre><code>def reverse(i):\n    return i^0xffffffff\n</code></pre>"},{"location":"LeetCode/%E4%BA%8C%E5%88%86%E6%B3%95/","title":"\u4e8c\u5206\u6cd5","text":""},{"location":"LeetCode/%E4%BA%8C%E5%88%86%E6%B3%95/#_1","title":"\u6709\u754c\u6570\u7ec4\u4e2d\u6307\u5b9a\u4e0b\u6807\u5904\u7684\u6700\u5927\u503c","text":"<p>\u7ed9\u4f60\u4e09\u4e2a\u6b63\u6574\u6570 n\u3001index \u548c maxSum \u3002\u4f60\u9700\u8981\u6784\u9020\u4e00\u4e2a\u540c\u65f6\u6ee1\u8db3\u4e0b\u8ff0\u6240\u6709\u6761\u4ef6\u7684\u6570\u7ec4 nums\uff08\u4e0b\u6807 \u4ece 0 \u5f00\u59cb \u8ba1\u6570\uff09\uff1a</p> <ul> <li>nums.length == n</li> <li>nums[i] \u662f \u6b63\u6574\u6570 \uff0c\u5176\u4e2d 0 &lt;= i &lt; n</li> <li>abs(nums[i] - nums[i+1]) &lt;= 1 \uff0c\u5176\u4e2d 0 &lt;= i &lt; n-1</li> <li>nums \u4e2d\u6240\u6709\u5143\u7d20\u4e4b\u548c\u4e0d\u8d85\u8fc7 maxSum</li> <li>nums[index] \u7684\u503c\u88ab \u6700\u5927\u5316 \u8fd4\u56de\u4f60\u6240\u6784\u9020\u7684\u6570\u7ec4\u4e2d\u7684 nums[index] \u3002</li> </ul> <p>\u6ce8\u610f\uff1aabs(x) \u7b49\u4e8e x \u7684\u524d\u63d0\u662f x &gt;= 0 \uff1b\u5426\u5219\uff0cabs(x) \u7b49\u4e8e -x \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 4, index = 2,  maxSum = 6  \n\u8f93\u51fa\uff1a2  \n\u89e3\u91ca\uff1a\u6570\u7ec4 [1,1,2,1] \u548c [1,2,2,1] \u6ee1\u8db3\u6240\u6709\u6761\u4ef6\u3002\u4e0d\u5b58\u5728\u5176\u4ed6\u5728\u6307\u5b9a\u4e0b\u6807\u5904\u5177\u6709\u66f4\u5927\u503c\u7684\u6709\u6548\u6570\u7ec4\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 6, index = 1,  maxSum = 10  \n\u8f93\u51fa\uff1a3\n</code></pre> <p>\u63d0\u793a\uff1a  1 &lt;= n &lt;= maxSum &lt;= 109  0 &lt;= index &lt; n</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def maxValue(self, n: int, index: int, maxSum: int) -&gt; int:\n        i,j=0,maxSum\n        # \u7edf\u8ba1\u4ee5index\u4e3a\u4e2d\u5fc3\u67d0\u4e00\u4fa7\u7684\u6570\u7ec4\u4e4b\u548c\n        def sum(maxNum,length):\n            if maxNum&gt;=length:\n                return length*maxNum+length*(1-length)/2\n            else:\n                return maxNum*(1+maxNum)/2 + length-maxNum\n\n        while i&lt;j:\n            mid=(i+j+1)//2 # \u6ce8\u610f\u4e3a\u4ec0\u4e48\u8981+1\n            if sum(mid,index+1)+sum(mid-1,n-index-1)&lt;=maxSum:\n                i=mid\n            else:\n                j=mid-1\n        return i\n</code></pre>"},{"location":"LeetCode/%E4%BA%8C%E5%8F%89%E6%A0%91/","title":"\u4e8c\u53c9\u6811","text":""},{"location":"LeetCode/%E4%BA%8C%E5%8F%89%E6%A0%91/#_2","title":"\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u4e2d\u5e8f\u540e\u7ee7","text":"<p>\u7ed9\u5b9a\u4e00\u68f5\u4e8c\u53c9\u641c\u7d22\u6811\u548c\u5176\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9 p \uff0c\u627e\u5230\u8be5\u8282\u70b9\u5728\u6811\u4e2d\u7684\u4e2d\u5e8f\u540e\u7ee7\u3002\u5982\u679c\u8282\u70b9\u6ca1\u6709\u4e2d\u5e8f\u540e\u7ee7\uff0c\u8bf7\u8fd4\u56de null \u3002</p> <p>\u8282\u70b9\u00a0p\u00a0\u7684\u540e\u7ee7\u662f\u503c\u6bd4\u00a0p.val\u00a0\u5927\u7684\u8282\u70b9\u4e2d\u952e\u503c\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u5373\u6309\u4e2d\u5e8f\u904d\u5386\u7684\u987a\u5e8f\u8282\u70b9 p \u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aroot = [2,1,3], p = 1\n\u8f93\u51fa\uff1a2\n\u89e3\u91ca\uff1a\u8fd9\u91cc 1 \u7684\u4e2d\u5e8f\u540e\u7ee7\u662f 2\u3002\u8bf7\u6ce8\u610f p \u548c\u8fd4\u56de\u503c\u90fd\u5e94\u662f TreeNode \u7c7b\u578b\u3002\n</code></pre> <p>\u793a\u4f8b\u00a02\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1aroot = [5,3,6,2,4,null,null,1], p = 6\n\u8f93\u51fa\uff1anull\n\u89e3\u91ca\uff1a\u56e0\u4e3a\u7ed9\u51fa\u7684\u8282\u70b9\u6ca1\u6709\u4e2d\u5e8f\u540e\u7ee7\uff0c\u6240\u4ee5\u7b54\u6848\u5c31\u8fd4\u56de null \u4e86\u3002\n</code></pre> <p>\u63d0\u793a\uff1a \u6811\u4e2d\u8282\u70b9\u7684\u6570\u76ee\u5728\u8303\u56f4 [1, 104] \u5185\u3002 -105 &lt;= Node.val &lt;= 105 \u6811\u4e2d\u5404\u8282\u70b9\u7684\u503c\u5747\u4fdd\u8bc1\u552f\u4e00\u3002  </p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def inorderSuccessor(self, root: 'TreeNode', p: 'TreeNode') -&gt; 'TreeNode':\n        self.target=p\n        self.find=False\n        self.res=None\n        self.dfs(root)\n        return self.res\n\n    def dfs(self,root):\n\n        if root is not None:\n            self.dfs(root.left)\n            if self.res is not None:\n                return\n            if self.find and root.val!=self.target.val:\n            self.res=root\n            return\n            if root.val==self.target.val:\n                self.find=True\n\n            self.dfs(root.right)\n</code></pre>"},{"location":"LeetCode/%E4%BA%8C%E5%8F%89%E6%A0%91/#_3","title":"\u5220\u9664\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684\u8282\u70b9","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6839\u8282\u70b9 root \u548c\u4e00\u4e2a\u503c key\uff0c\u5220\u9664\u4e8c\u53c9\u641c\u7d22\u6811\u4e2d\u7684 key \u5bf9\u5e94\u7684\u8282\u70b9\uff0c\u5e76\u4fdd\u8bc1\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6027\u8d28\u4e0d\u53d8\u3002\u8fd4\u56de\u4e8c\u53c9\u641c\u7d22\u6811\uff08\u6709\u53ef\u80fd\u88ab\u66f4\u65b0\uff09\u7684\u6839\u8282\u70b9\u7684\u5f15\u7528\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u5220\u9664\u8282\u70b9\u53ef\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li>\u9996\u5148\u627e\u5230\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\uff1b</li> <li>\u5982\u679c\u627e\u5230\u4e86\uff0c\u5220\u9664\u5b83\u3002</li> </ol> <p>\u793a\u4f8b 1:</p> <p></p> <pre><code>\u8f93\u5165\uff1aroot = [5,3,6,2,4,null,7], key = 3\n\u8f93\u51fa\uff1a[5,4,6,2,null,null,7]\n\u89e3\u91ca\uff1a\u7ed9\u5b9a\u9700\u8981\u5220\u9664\u7684\u8282\u70b9\u503c\u662f 3\uff0c\u6240\u4ee5\u6211\u4eec\u9996\u5148\u627e\u5230 3 \u8fd9\u4e2a\u8282\u70b9\uff0c\u7136\u540e\u5220\u9664\u5b83\u3002\n\u4e00\u4e2a\u6b63\u786e\u7684\u7b54\u6848\u662f [5,4,6,2,null,null,7], \u5982\u4e0b\u56fe\u6240\u793a\u3002\n\u53e6\u4e00\u4e2a\u6b63\u786e\u7b54\u6848\u662f [5,2,6,null,4,null,7]\u3002\n</code></pre> <p>\u793a\u4f8b 2:</p> <p></p> <pre><code>\u8f93\u5165: root = [5,3,6,2,4,null,7], key = 0\n\u8f93\u51fa: [5,3,6,2,4,null,7]\n\u89e3\u91ca: \u4e8c\u53c9\u6811\u4e0d\u5305\u542b\u503c\u4e3a 0 \u7684\u8282\u70b9\n</code></pre> <p>\u793a\u4f8b 3:</p> <pre><code>\u8f93\u5165: root = [], key = 0\n\u8f93\u51fa: []\n</code></pre> <p>\u63d0\u793a: \u8282\u70b9\u6570\u7684\u8303\u56f4 [0, 104]. -105 &lt;= Node.val &lt;= 105 \u8282\u70b9\u503c\u552f\u4e00 root \u662f\u5408\u6cd5\u7684\u4e8c\u53c9\u641c\u7d22\u6811 -105 &lt;= key &lt;= 105</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def deleteNode(self, root: Optional[TreeNode], key: int) -&gt; Optional[TreeNode]:\n        if root:\n            if root.val&lt;key:\n                root.right=self.deleteNode(root.right,key)\n                return root\n            elif root.val&gt;key:\n                root.left=self.deleteNode(root.left,key)\n                return root\n            else:\n                if not root.left and not root.right:\n                    return None\n                elif not root.left:\n                    return root.right\n                elif not root.right:\n                    return root.left\n                else:\n                    next_first=root.right\n                    while next_first.left:\n                        next_first=next_first.left\n                    next_first.right=self.deleteNode(root.right,next_first.val)\n                    next_first.left=root.left\n\n                return next_first\n        else:\n            return None\n</code></pre>"},{"location":"LeetCode/%E5%89%8D%E7%BC%80%E5%92%8C/","title":"\u524d\u7f00\u548c","text":""},{"location":"LeetCode/%E5%89%8D%E7%BC%80%E5%92%8C/#k","title":"\u548c\u4e3a k \u7684\u5b50\u6570\u7ec4","text":"<p>\u221a \u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\u548c\u4e00\u4e2a\u6574\u6570\u00a0k \uff0c\u8bf7\u627e\u5230\u8be5\u6570\u7ec4\u4e2d\u548c\u4e3a\u00a0k\u00a0\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u4e2a\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165:nums = [1,1,1], k = 2  \n\u8f93\u51fa: 2  \n\u89e3\u91ca: \u6b64\u9898 [1,1] \u4e0e [1,1] \u4e3a\u4e24\u79cd\u4e0d\u540c\u7684\u60c5\u51b5\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165:nums = [1,2,3], k = 3  \n\u8f93\u51fa: 2\n</code></pre> <p>\u63d0\u793a: 1 &lt;= nums.length &lt;= 2 * 104 -1000 &lt;= nums[i] &lt;= 1000 -107\u00a0&lt;= k &lt;= 107  </p> \u601d\u8def <ol> <li>\u8bbe\u7f6e\u4e00\u4e2a\u5b57\u5178\u8bb0\u5f55 S1,S2,...,Sn \uff0c\u952e\uff1aSx,\u503c\uff1a0~x\u9879\u7684\u548c</li> <li>\u6bcf\u904d\u5386\u4e00\u6b65\u8bb0\u5f55\uff0c\u901a\u8fc7\u54c8\u5e0c\u8868\u67e5\u627e\u662f\u5426\u5b58\u5728x\u4f7fsum-x=k</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def subarraySum(self, nums: List[int], k: int) -&gt; int:\n        sum=0\n        res=0\n        d=dict()\n        d[0]=1\n        for i in nums:\n            sum+=i\n            if d.get(sum-k):\n                res+=d[sum-k]\n            if d.get(sum):\n                d[sum]+=1\n            else:\n                d[sum]=1\n\n        return res\n</code></pre>"},{"location":"LeetCode/%E5%89%8D%E7%BC%80%E5%92%8C/#_2","title":"\u5411\u4e0b\u7684\u8def\u5f84\u8282\u70b9\u4e4b\u548c","text":"<p>\u221a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u6839\u8282\u70b9 root\u00a0\uff0c\u548c\u4e00\u4e2a\u6574\u6570 targetSum \uff0c\u6c42\u8be5\u4e8c\u53c9\u6811\u91cc\u8282\u70b9\u503c\u4e4b\u548c\u7b49\u4e8e targetSum \u7684 \u8def\u5f84 \u7684\u6570\u76ee\u3002</p> <p>\u8def\u5f84 \u4e0d\u9700\u8981\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4e5f\u4e0d\u9700\u8981\u5728\u53f6\u5b50\u8282\u70b9\u7ed3\u675f\uff0c\u4f46\u662f\u8def\u5f84\u65b9\u5411\u5fc5\u987b\u662f\u5411\u4e0b\u7684\uff08\u53ea\u80fd\u4ece\u7236\u8282\u70b9\u5230\u5b50\u8282\u70b9\uff09\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aroot = [10,5,-3,3,2,null,11,3,-2,null,1], targetSum = 8  \n\u8f93\u51fa\uff1a3  \n\u89e3\u91ca\uff1a\u548c\u7b49\u4e8e 8 \u7684\u8def\u5f84\u6709 3 \u6761\uff0c\u5982\u56fe\u6240\u793a\u3002\n</code></pre> <p></p> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aroot = [5,4,8,11,null,13,4,7,2,null,null,5,1], targetSum = 22  \n\u8f93\u51fa\uff1a3\n</code></pre> <p>\u63d0\u793a: \u4e8c\u53c9\u6811\u7684\u8282\u70b9\u4e2a\u6570\u7684\u8303\u56f4\u662f [0,1000] -109\u00a0&lt;= Node.val &lt;= 109\u00a0 -1000\u00a0&lt;= targetSum\u00a0&lt;= 1000\u00a0</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def pathSum(self, root: TreeNode, targetSum: int) -&gt; int:\n        self.res=0\n        self.targetSum=targetSum\n        self.dfs(root)\n        return self.res\n    def dfs(self,root):\n        if root!=None:\n            d=defaultdict(int)\n            left_dict=self.dfs(root.left)\n            right_dict=self.dfs(root.right)\n            for k,v in list(left_dict.items())+list(right_dict.items()):\n                d[root.val+k]+=v\n            d[root.val]+=1\n            self.res+=d[self.targetSum]\n            return d\n        else:\n            return defaultdict(int)\n</code></pre>"},{"location":"LeetCode/%E5%89%8D%E7%BC%80%E5%92%8C/#_3","title":"\u6309\u6743\u91cd\u751f\u6210\u968f\u673a\u6570","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4\u00a0w \uff0c\u5176\u4e2d\u00a0w[i]\u00a0\u4ee3\u8868\u4e0b\u6807 i\u00a0\u7684\u6743\u91cd\uff08\u4e0b\u6807\u4ece 0 \u5f00\u59cb\uff09\uff0c\u8bf7\u5199\u4e00\u4e2a\u51fd\u6570\u00a0pickIndex\u00a0\uff0c\u5b83\u53ef\u4ee5\u968f\u673a\u5730\u83b7\u53d6\u4e0b\u6807 i\uff0c\u9009\u53d6\u4e0b\u6807 i\u00a0\u7684\u6982\u7387\u4e0e\u00a0w[i]\u00a0\u6210\u6b63\u6bd4\u3002</p> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e w = [1, 3]\uff0c\u6311\u9009\u4e0b\u6807 0 \u7684\u6982\u7387\u4e3a 1 / (1 + 3)\u00a0= 0.25 \uff08\u5373\uff0c25%\uff09\uff0c\u800c\u9009\u53d6\u4e0b\u6807 1 \u7684\u6982\u7387\u4e3a 3 / (1 + 3)\u00a0= 0.75\uff08\u5373\uff0c75%\uff09\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u9009\u53d6\u4e0b\u6807 i \u7684\u6982\u7387\u4e3a w[i] / sum(w) \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a  \ninputs = [\"Solution\",\"pickIndex\"]  \ninputs = [[[1]],[]]  \n\u8f93\u51fa\uff1a  \n[null,0]  \n\u89e3\u91ca\uff1a  \nSolution solution = new Solution([1]);  \nsolution.pickIndex(); // \u8fd4\u56de 0\uff0c\u56e0\u4e3a\u6570\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u552f\u4e00\u7684\u9009\u62e9\u662f\u8fd4\u56de\u4e0b\u6807 0\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a\ninputs = [\"Solution\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\",\"pickIndex\"]\ninputs = [[[1,3]],[],[],[],[],[]]\n\u8f93\u51fa\uff1a\n[null,1,1,1,1,0]\n\u89e3\u91ca\uff1a\nSolution solution = new Solution([1, 3]);\nsolution.pickIndex(); // \u8fd4\u56de 1\uff0c\u8fd4\u56de\u4e0b\u6807 1\uff0c\u8fd4\u56de\u8be5\u4e0b\u6807\u6982\u7387\u4e3a 3/4 \u3002\nsolution.pickIndex(); // \u8fd4\u56de 1\nsolution.pickIndex(); // \u8fd4\u56de 1\nsolution.pickIndex(); // \u8fd4\u56de 1\nsolution.pickIndex(); // \u8fd4\u56de 0\uff0c\u8fd4\u56de\u4e0b\u6807 0\uff0c\u8fd4\u56de\u8be5\u4e0b\u6807\u6982\u7387\u4e3a 1/4 \u3002\n\n\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u968f\u673a\u95ee\u9898\uff0c\u5141\u8bb8\u591a\u4e2a\u7b54\u6848\uff0c\u56e0\u6b64\u4e0b\u5217\u8f93\u51fa\u90fd\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u662f\u6b63\u786e\u7684:\n[null,1,1,1,1,0]\n[null,1,1,1,1,1]\n[null,1,1,1,0,0]\n[null,1,1,1,0,1]\n[null,1,0,1,0,0]\n......\n\u8bf8\u82e5\u6b64\u7c7b\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= w.length &lt;= 10000 1 &lt;= w[i] &lt;= 10^5 pickIndex\u00a0\u5c06\u88ab\u8c03\u7528\u4e0d\u8d85\u8fc7\u00a010000\u00a0\u6b21</p> \u601d\u8def <p>\u4e8c\u5206\u67e5\u627e\u7528\u4e8e\u6c42\u5e73\u65b9\u6839</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def __init__(self, w: List[int]):\n        self.w=w\n        self.sum=w\n        for i in range(1,len(self.sum)):\n            self.sum[i]+=self.sum[i-1]\n\n    def pickIndex(self) -&gt; int:\n        index=random.randint(1,self.sum[-1])\n        return bisect.bisect_left(self.sum,index)\n</code></pre>"},{"location":"LeetCode/%E5%8F%8C%E6%8C%87%E9%92%88/","title":"\u53cc\u6307\u9488","text":""},{"location":"LeetCode/%E5%8F%8C%E6%8C%87%E9%92%88/#_2","title":"\u5220\u9664\u6700\u77ed\u7684\u5b50\u6570\u7ec4\u4f7f\u5269\u4f59\u6570\u7ec4\u6709\u5e8f","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 arr \uff0c\u8bf7\u4f60\u5220\u9664\u4e00\u4e2a\u5b50\u6570\u7ec4\uff08\u53ef\u4ee5\u4e3a\u7a7a\uff09\uff0c\u4f7f\u5f97 arr \u4e2d\u5269\u4e0b\u7684\u5143\u7d20\u662f \u975e\u9012\u51cf \u7684\u3002</p> <p>\u4e00\u4e2a\u5b50\u6570\u7ec4\u6307\u7684\u662f\u539f\u6570\u7ec4\u4e2d\u8fde\u7eed\u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002</p> <p>\u8bf7\u4f60\u8fd4\u56de\u6ee1\u8db3\u9898\u76ee\u8981\u6c42\u7684\u6700\u77ed\u5b50\u6570\u7ec4\u7684\u957f\u5ea6\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [1,2,3,10,4,2,3,5]\n\u8f93\u51fa\uff1a3\n\u89e3\u91ca\uff1a\u6211\u4eec\u9700\u8981\u5220\u9664\u7684\u6700\u77ed\u5b50\u6570\u7ec4\u662f [10,4,2] \uff0c\u957f\u5ea6\u4e3a 3 \u3002\u5269\u4f59\u5143\u7d20\u5f62\u6210\u975e\u9012\u51cf\u6570\u7ec4 [1,2,3,3,5] \u3002\n\u53e6\u4e00\u4e2a\u6b63\u786e\u7684\u89e3\u4e3a\u5220\u9664\u5b50\u6570\u7ec4 [3,10,4] \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [5,4,3,2,1]\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\u7531\u4e8e\u6570\u7ec4\u662f\u4e25\u683c\u9012\u51cf\u7684\uff0c\u6211\u4eec\u53ea\u80fd\u4fdd\u7559\u4e00\u4e2a\u5143\u7d20\u3002\u6240\u4ee5\u6211\u4eec\u9700\u8981\u5220\u9664\u957f\u5ea6\u4e3a 4 \u7684\u5b50\u6570\u7ec4\uff0c\u8981\u4e48\u5220\u9664 [5,4,3,2]\uff0c\u8981\u4e48\u5220\u9664 [4,3,2,1]\u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [1,2,3]\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1a\u6570\u7ec4\u5df2\u7ecf\u662f\u975e\u9012\u51cf\u7684\u4e86\uff0c\u6211\u4eec\u4e0d\u9700\u8981\u5220\u9664\u4efb\u4f55\u5143\u7d20\u3002\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [1]\n\u8f93\u51fa\uff1a0\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= arr.length &lt;= 10^5 0 &lt;= arr[i] &lt;= 10^9  </p> \u601d\u8def <p>\u6ce8\uff1a\u5199\u8fd9\u9053\u9898\u7684\u65f6\u5019\u601d\u8def\u9519\u4e86\u5bfc\u81f4\u6d6a\u8d39\u5f88\u591a\u65f6\u95f4</p> <ol> <li>\u5206\u6210\u5de6\u53f3\u4e24\u4e2a\u6570\u7ec4left,right<ul> <li>left\u662f\u4ee5arr\u7b2c\u4e00\u4e2a\u5143\u7d20\u5f00\u5934\u7684\u975e\u9012\u51cf\u5b50\u6570\u7ec4</li> <li>right\u662f\u4ee5arr\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7ed3\u5c3e\u7684\u975e\u9012\u51cf\u5b50\u6570\u7ec4</li> </ul> </li> <li>\u904d\u5386left\uff0c\u6c42\u4ee5left[i]\u7ed3\u5c3e\u7684\u5b50\u6570\u7ec4\uff0cright\u8981\u53d6\u5230\u54ea\u4e00\u4e2aright[j]\u624d\u80fd\u6ee1\u8db3arr[0],...,left[i],right[j] ... arr[-1]\u4e3a\u975e\u9012\u51cf\u5b50\u6570\u7ec4</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def findLengthOfShortestSubarray(self, arr: List[int]) -&gt; int:\n        a,b=0,len(arr)-1\n        while a+1&lt;len(arr) and arr[a]&lt;=arr[a+1]:\n            a+=1\n        while b-1&gt;=0 and arr[b-1]&lt;=arr[b]:\n            b-=1\n        res=min(len(arr)-a-1,b)\n        if res==0:return 0\n        for i in range(a+1):\n            while b&lt;len(arr):\n                if arr[i]&lt;=arr[b]:\n                    res=min(res,b-i-1)\n                    break\n                b+=1\n        return res\n</code></pre>"},{"location":"LeetCode/%E5%9B%BE/","title":"\u56fe","text":""},{"location":"LeetCode/%E5%9B%BE/#_2","title":"\u7834\u89e3\u4fdd\u9669\u7bb1","text":"<p>\u6709\u4e00\u4e2a\u9700\u8981\u5bc6\u7801\u624d\u80fd\u6253\u5f00\u7684\u4fdd\u9669\u7bb1\u3002\u5bc6\u7801\u662f\u00a0n \u4f4d\u6570, \u5bc6\u7801\u7684\u6bcf\u4e00\u4f4d\u662f\u00a0k\u00a0\u4f4d\u5e8f\u5217\u00a00, 1, ..., k-1\u00a0\u4e2d\u7684\u4e00\u4e2a \u3002\u4f60\u53ef\u4ee5\u968f\u610f\u8f93\u5165\u5bc6\u7801\uff0c\u4fdd\u9669\u7bb1\u4f1a\u81ea\u52a8\u8bb0\u4f4f\u6700\u540e\u00a0n\u00a0\u4f4d\u8f93\u5165\uff0c\u5982\u679c\u5339\u914d\uff0c\u5219\u80fd\u591f\u6253\u5f00\u4fdd\u9669\u7bb1\u3002 \u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbe\u5bc6\u7801\u662f\u00a0\"345\"\uff0c\u4f60\u53ef\u4ee5\u8f93\u5165\u00a0\"012345\"\u00a0\u6765\u6253\u5f00\u5b83\uff0c\u53ea\u662f\u4f60\u8f93\u5165\u4e86 6\u00a0\u4e2a\u5b57\u7b26\u3002 \u8bf7\u8fd4\u56de\u4e00\u4e2a\u80fd\u6253\u5f00\u4fdd\u9669\u7bb1\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002  </p> <p>\u793a\u4f8b1:</p> <pre><code>\u8f93\u5165: n = 1, k = 2  \n\u8f93\u51fa: \"01\"  \n\u8bf4\u660e: \"10\"\u4e5f\u53ef\u4ee5\u6253\u5f00\u4fdd\u9669\u7bb1\u3002\n</code></pre> <p>\u793a\u4f8b2:</p> <pre><code>\u8f93\u5165: n = 2, k = 2  \n\u8f93\u51fa: \"00110\"  \n\u8bf4\u660e: \"01100\", \"10011\", \"11001\" \u4e5f\u80fd\u6253\u5f00\u4fdd\u9669\u7bb1\u3002\n</code></pre> <p>\u63d0\u793a\uff1a n \u7684\u8303\u56f4\u662f [1, 4]\u3002 k \u7684\u8303\u56f4\u662f [1, 10]\u3002 k^n \u6700\u5927\u53ef\u80fd\u4e3a 4096\u3002  </p> \u601d\u8def <p>\u6b27\u62c9\u56de\u8def\uff0c\u6df1\u5ea6\u4f18\u5148\u641c\u7d22</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def minOperations(self, nums: List[int], x: int) -&gt; int:\n        sumNums=sum(nums)\n        if sumNums==x:\n            return len(nums)\n        d=dict()\n        d[0]=-1\n        preSum=0\n        res=0xffffffff\n        for j in range(len(nums)):\n            preSum+=nums[j]\n            if (t:=(x-(sumNums-preSum))) in d:\n                res=min(res,(len(nums)-j-1)+d[t]+1)\n\n\n            d[preSum]=min(d[preSum],j) if preSum in d else j\n        return res if res!=0xffffffff else -1\n</code></pre>"},{"location":"LeetCode/%E5%9B%BE/#_3","title":"\u5355\u8bcd\u6f14\u53d8","text":"<p>\u5728\u5b57\u5178\uff08\u5355\u8bcd\u5217\u8868\uff09 wordList \u4e2d\uff0c\u4ece\u5355\u8bcd beginWord \u548c endWord \u7684 \u8f6c\u6362\u5e8f\u5217 \u662f\u4e00\u4e2a\u6309\u4e0b\u8ff0\u89c4\u683c\u5f62\u6210\u7684\u5e8f\u5217\uff1a</p> <ul> <li>\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5355\u8bcd\u662f beginWord \u3002</li> <li>\u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u662f endWord \u3002</li> <li>\u6bcf\u6b21\u8f6c\u6362\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u6bcd\u3002</li> <li>\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u5355\u8bcd\u5fc5\u987b\u662f\u5b57\u5178 wordList \u4e2d\u7684\u5355\u8bcd\u3002</li> </ul> <p>\u7ed9\u5b9a\u4e24\u4e2a\u957f\u5ea6\u76f8\u540c\u4f46\u5185\u5bb9\u4e0d\u540c\u7684\u5355\u8bcd beginWord \u548c endWord \u548c\u4e00\u4e2a\u5b57\u5178 wordList \uff0c\u627e\u5230\u4ece beginWord \u5230 endWord \u7684 \u6700\u77ed\u8f6c\u6362\u5e8f\u5217 \u4e2d\u7684 \u5355\u8bcd\u6570\u76ee \u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u8fd4\u56de 0\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1abeginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u4e00\u4e2a\u6700\u77ed\u8f6c\u6362\u5e8f\u5217\u662f \"hit\" -&gt; \"hot\" -&gt; \"dot\" -&gt; \"dog\" -&gt; \"cog\", \u8fd4\u56de\u5b83\u7684\u957f\u5ea6 5\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1abeginWord = \"hit\", endWord = \"cog\", wordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1aendWord \"cog\" \u4e0d\u5728\u5b57\u5178\u4e2d\uff0c\u6240\u4ee5\u65e0\u6cd5\u8fdb\u884c\u8f6c\u6362\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= beginWord.length &lt;= 10 endWord.length == beginWord.length 1 &lt;= wordList.length &lt;= 5000 wordList[i].length == beginWord.length beginWord\u3001endWord \u548c wordList[i] \u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210 beginWord != endWord wordList \u4e2d\u7684\u6240\u6709\u5b57\u7b26\u4e32 \u4e92\u4e0d\u76f8\u540c  </p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -&gt; int:\n        if endWord not in wordList:return 0\n        wordList.append(beginWord)\n        mat=[[] for  _ in wordList]\n        def distinction(s1,s2):\n            i=0\n            while i&lt;len(s1) and s1[i]==s2[i]:\n                i+=1\n\n            if s1[i+1:]==s2[i+1:]:\n                return True\n            else:\n                return False\n\n        for i in range(len(wordList)-1):\n            for j in range(i+1,len(wordList)):\n                if distinction(wordList[i],wordList[j]):\n                    mat[i].append(j)\n                    mat[j].append(i)\n        q=deque()\n        q.append(len(wordList)-1)\n        res=1\n        visite=[False]*len(wordList)\n        visite[-1]=True\n        current_number=1\n        while len(q):\n            front=q.popleft()\n            current_number-=1\n            for next in mat[front]:\n                if visite[next]!=True:\n                    if wordList[next]==endWord:\n                        return res+1\n                    q.append(next)\n                    visite[next]=True\n            if current_number==0:\n                current_number=len(q)\n                res+=1\n        return 0\n</code></pre>"},{"location":"LeetCode/%E5%AD%97%E7%AC%A6%E4%B8%B2/","title":"\u5b57\u7b26\u4e32","text":""},{"location":"LeetCode/%E5%AD%97%E7%AC%A6%E4%B8%B2/#lr","title":"\u5728LR\u5b57\u7b26\u4e32\u4e2d\u4ea4\u6362\u76f8\u90bb\u5b57\u7b26","text":"<p>\u5728\u4e00\u4e2a\u7531 'L' , 'R' \u548c 'X' \u4e09\u4e2a\u5b57\u7b26\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\uff08\u4f8b\u5982\"RXXLRXRXL\"\uff09\u4e2d\u8fdb\u884c\u79fb\u52a8\u64cd\u4f5c\u3002\u4e00\u6b21\u79fb\u52a8\u64cd\u4f5c\u6307\u7528\u4e00\u4e2a\"LX\"\u66ff\u6362\u4e00\u4e2a\"XL\"\uff0c\u6216\u8005\u7528\u4e00\u4e2a\"XR\"\u66ff\u6362\u4e00\u4e2a\"RX\"\u3002</p> <p>\u73b0\u7ed9\u5b9a\u8d77\u59cb\u5b57\u7b26\u4e32start\u548c\u7ed3\u675f\u5b57\u7b26\u4e32end\uff0c\u8bf7\u7f16\u5199\u4ee3\u7801\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u7cfb\u5217\u79fb\u52a8\u64cd\u4f5c\u4f7f\u5f97start\u53ef\u4ee5\u8f6c\u6362\u6210end\u65f6\uff0c \u8fd4\u56deTrue\u3002</p> <p>\u793a\u4f8b :</p> <pre><code>\u8f93\u5165: start = \"RXXLRXRXL\", end = \"XRLXXRRLX\"\n\u8f93\u51fa: True\n\u89e3\u91ca:\n\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u51e0\u6b65\u5c06start\u8f6c\u6362\u6210end:\nRXXLRXRXL -&gt;\nXRXLRXRXL -&gt;\nXRLXRXRXL -&gt;\nXRLXXRRXL -&gt;\nXRLXXRRLX\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= len(start) = len(end) &lt;= 10000\u3002 start\u548cend\u4e2d\u7684\u5b57\u7b26\u4e32\u4ec5\u9650\u4e8e'L', 'R'\u548c'X'\u3002  </p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def canTransform(self, start: str, end: str) -&gt; bool:\n        i,j=0,0\n        start,end=list(start),list(end)\n        while i&lt;len(start) and j&lt;len(end):\n            if end[j]=='X':\n                j+=1\n                continue\n            if start[i]=='X':\n                i+=1\n                continue\n\n            if (end[j]=='L'==start[i] and i&gt;=j) or (end[j]=='R'==start[i] and i&lt;=j):\n                i+=1\n                j+=1\n            else:\n                return False\n        while i&lt;len(start):\n            if start[i]!='X':return False\n            i+=1\n        while j&lt;len(end):\n            if end[j]!='X':return False\n            j+=1\n        return True\n</code></pre>"},{"location":"LeetCode/%E5%B9%B6%E6%9F%A5%E9%9B%86/","title":"\u5e76\u67e5\u96c6","text":""},{"location":"LeetCode/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_2","title":"\u4e00\u3001\u4f5c\u7528","text":"<p>\u63cf\u8ff0\u4e0d\u540c\u5143\u7d20\u4e4b\u95f4\u7684\u201c\u5173\u7cfb\u201d</p> <p>\u5e76\u67e5\u96c6\u80fd\u4e00\u4e9b\u7c7b\u4f3c\u8fde\u901a\u5757\u7684\u95ee\u9898\uff0c\u6bd4\u5982 1. \u5982\u4f55\u5feb\u901f\u5f20\u4e09\u548c\u674e\u56db\u662f\u4e0d\u662f\u540c\u4e2a\u5bb6\u65cf\u7684\u3002 2. \u5982\u4f55\u5feb\u901f\u5408\u5e76\u5f20\u4e09\u548c\u674e\u56db\u4e24\u4e2a\u5bb6\u65cf\uff08\u4e24\u4e2a\u4eba\u4e0d\u540c\u5bb6\u65cf\uff09\u3002</p>"},{"location":"LeetCode/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_3","title":"\u4e8c\u3001\u793a\u4f8b\u4ee3\u7801","text":"\u666e\u901a\u4f18\u5316 <pre><code>class UnionFind:\n    def __init__(self, n: int):\n        self.parent = list(range(n))    # parent[x]\u8868\u793ax\u7684\u957f\u8f88\u662fparent[x]\uff0c\u9ed8\u8ba4\u662f\u81ea\u5df1\n\n    # \u5bfb\u627ex\u7684\u957f\u8f88\n    def find(self, x: int) -&gt; int:\n        return x if self.parent[x] == x else self.find(self.parent[x])\n\n    # \u5c06x\u548cy\u4ed6\u4eec\u6240\u5904\u7684\u5bb6\u65cf\u5408\u5e76 `x\u5408\u5e76\u5230y`\n    def merge(self, x: int, y: int) -&gt; None:\n        self.parent[self.find(x)] = self.find(y)\n</code></pre> <pre><code>class UnionFind:\n    def __init__(self, n: int):\n        self.parent = list(range(n))    # parent[x]\u8868\u793ax\u7684\u957f\u8f88\u662fparent[x]\uff0c\u9ed8\u8ba4\u662f\u81ea\u5df1\n        self.rank = [0] * n             # rank[x]\u8868\u793ax\u7684\u8f88\u5206,\u503c\u8d8a\u5927\u5219\u8f88\u5206\u8d8a\u9ad8\uff0c\u9ed8\u8ba4\u662f0\n\n    # \u5bfb\u627ex\u7684\u957f\u8f88(\u8def\u5f84\u538b\u7f29)\n    def find(self, x: int) -&gt; int:\n        if self.parent[x] != x:\n            self.parent[x] = self.find(self.parent[x])\n        return self.parent[x]\n\n    # \u5c06x\u548cy\u4ed6\u4eec\u6240\u5904\u7684\u5bb6\u65cf\u5408\u5e76(\u542f\u53d1\u5f0f\u5408\u5e76)\n    def merge(self, x: int, y: int) -&gt; None:\n        x, y = self.find(x), self.find(y)\n        if x == y:\n            return\n        if self.rank[x] &gt; self.rank[y]:\n            self.parent[y] = x\n        elif self.rank[x] &lt; self.rank[y]:\n            self.parent[x] = y\n        else:\n            self.parent[y] = x\n            self.rank[x] += 1\n</code></pre>"},{"location":"LeetCode/%E5%B9%B6%E6%9F%A5%E9%9B%86/#_4","title":"\u77e9\u9635\u8f6c\u6362\u540e\u7684\u79e9","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u00a0m x n\u00a0\u7684\u77e9\u9635 matrix\u00a0\uff0c\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u77e9\u9635\u00a0answer\u00a0\uff0c\u5176\u4e2d\u00a0answer[row][col]\u00a0\u662f\u00a0matrix[row][col]\u00a0\u7684\u79e9\u3002</p> <p>\u6bcf\u4e2a\u5143\u7d20\u7684\u00a0\u79e9\u00a0\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u8fd9\u4e2a\u5143\u7d20\u76f8\u5bf9\u4e8e\u5176\u4ed6\u5143\u7d20\u7684\u5927\u5c0f\u5173\u7cfb\uff0c\u5b83\u6309\u7167\u5982\u4e0b\u89c4\u5219\u8ba1\u7b97\uff1a</p> <p>\u79e9\u662f\u4ece 1 \u5f00\u59cb\u7684\u4e00\u4e2a\u6574\u6570\u3002 \u5982\u679c\u4e24\u4e2a\u5143\u7d20\u00a0p \u548c\u00a0q\u00a0\u5728 \u540c\u4e00\u884c\u00a0\u6216\u8005 \u540c\u4e00\u5217\u00a0\uff0c\u90a3\u4e48\uff1a \u5982\u679c\u00a0p &lt; q \uff0c\u90a3\u4e48\u00a0rank(p) &lt; rank(q) \u5982\u679c\u00a0p == q\u00a0\uff0c\u90a3\u4e48\u00a0rank(p) == rank(q) \u5982\u679c\u00a0p &gt; q\u00a0\uff0c\u90a3\u4e48\u00a0rank(p) &gt; rank(q) \u79e9\u00a0\u9700\u8981\u8d8a \u5c0f\u00a0\u8d8a\u597d\u3002 \u9898\u76ee\u4fdd\u8bc1\u6309\u7167\u4e0a\u9762\u89c4\u5219\u00a0answer\u00a0\u6570\u7ec4\u662f\u552f\u4e00\u7684\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1amatrix = [[1,2],[3,4]]\n\u8f93\u51fa\uff1a[[1,2],[2,3]]\n\u89e3\u91ca\uff1a\nmatrix[0][0] \u7684\u79e9\u4e3a 1 \uff0c\u56e0\u4e3a\u5b83\u662f\u6240\u5728\u884c\u548c\u5217\u7684\u6700\u5c0f\u6574\u6570\u3002\nmatrix[0][1] \u7684\u79e9\u4e3a 2 \uff0c\u56e0\u4e3a matrix[0][1] &gt; matrix[0][0] \u4e14 matrix[0][0] \u7684\u79e9\u4e3a 1 \u3002\nmatrix[1][0] \u7684\u79e9\u4e3a 2 \uff0c\u56e0\u4e3a matrix[1][0] &gt; matrix[0][0] \u4e14 matrix[0][0] \u7684\u79e9\u4e3a 1 \u3002\nmatrix[1][1] \u7684\u79e9\u4e3a 3 \uff0c\u56e0\u4e3a matrix[1][1] &gt; matrix[0][1]\uff0c matrix[1][1] &gt; matrix[1][0] \u4e14 matrix[0][1] \u548c matrix[1][0] \u7684\u79e9\u90fd\u4e3a 2 \u3002\n</code></pre> <p></p> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1amatrix = [[7,7],[7,7]]\n\u8f93\u51fa\uff1a[[1,1],[1,1]]\n</code></pre> <p></p> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1amatrix = [[20,-21,14],[-19,4,19],[22,-47,24],[-19,4,19]]\n\u8f93\u51fa\uff1a[[4,2,3],[1,3,4],[5,1,6],[1,3,4]]\n</code></pre> <p></p> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1amatrix = [[7,3,6],[1,4,5],[9,8,2]]\n\u8f93\u51fa\uff1a[[5,1,4],[1,2,3],[6,3,1]]\n</code></pre> <p></p> <p>\u63d0\u793a\uff1a m == matrix.length n == matrix[i].length 1 &lt;= m, n &lt;= 500 -109 &lt;= matrix[row][col] &lt;= 109</p> \u601d\u8def <ol> <li>\u6839\u636e\u503c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u76f8\u540c\u7684\u503c\u5408\u5e76\u6210\u5217\u8868</li> <li>\u4ece\u5c0f\u5230\u5927\u904d\u5386\u3002\u7528\u5e76\u67e5\u96c6\u5408\u5e76<code>\u884c\u5217\u76f8\u540c</code>\u7684\u503c\u4e3a\u4e00\u7ec4\uff08\u96be\u70b9\uff09</li> <li>\u904d\u5386\u6bcf\u4e00\u7ec4\u7684\u503c\uff0c\u7edf\u8ba1\u7ec4\u5185\u5143\u7d20\u6240\u5904\u7684\u884c\u5217\u7684\u6700\u5927\u503c</li> <li>\u8d4b\u503c</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def matrixRankTransform(self, matrix: List[List[int]]) -&gt; List[List[int]]:\n        # \u540c\u503c\u5408\u5e76\n        d=defaultdict(list)\n        for i in range(len(matrix)):\n            for j in range(len(matrix[0])):\n                d[matrix[i][j]].append([i,j]) \n\n        line,column=[0]*len(matrix),[0]*len(matrix[0])\n        for x in sorted(d.keys()):\n            uf=UnionFind(len(matrix)+len(matrix[0]))\n\n            # \u540c\u4e00\u884c/\u540c\u4e00\u5217\u5408\u5e76\n            for r,c in d[x]:\n                uf.merge(r,c+len(matrix)) \n\n            # \u6839\u636e\u5217\u5206\u7ec4\n            groups=defaultdict(list) \n            for r,c in d[x]:\n                groups[uf.find(r)].append([r,c])\n\n\n            for i in groups.keys():\n                rank=0\n                # \u83b7\u53d6\u540c\u7ec4\u7684\u6700\u5927rank\n                for r,c in groups[i]:\n                    rank=max(rank,line[r]+1,column[c]+1)\n\n                # \u8d4b\u503c\n                for r,c in groups[i]:\n                    matrix[r][c]=rank\n                    line[r]=rank\n                    column[c]=rank\n        return matrix\n</code></pre>"},{"location":"LeetCode/%E6%80%9D%E8%B7%AF%E8%BD%AC%E6%8D%A2/","title":"\u601d\u8def\u8f6c\u6362","text":""},{"location":"LeetCode/%E6%80%9D%E8%B7%AF%E8%BD%AC%E6%8D%A2/#x-0","title":"\u5c06 x \u51cf\u5230 0 \u7684\u6700\u5c0f\u64cd\u4f5c\u6570","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 x \u3002\u6bcf\u4e00\u6b21\u64cd\u4f5c\u65f6\uff0c\u4f60\u5e94\u5f53\u79fb\u9664\u6570\u7ec4 nums \u6700\u5de6\u8fb9\u6216\u6700\u53f3\u8fb9\u7684\u5143\u7d20\uff0c\u7136\u540e\u4ece x \u4e2d\u51cf\u53bb\u8be5\u5143\u7d20\u7684\u503c\u3002\u8bf7\u6ce8\u610f\uff0c\u9700\u8981 \u4fee\u6539 \u6570\u7ec4\u4ee5\u4f9b\u63a5\u4e0b\u6765\u7684\u64cd\u4f5c\u4f7f\u7528\u3002 \u5982\u679c\u53ef\u4ee5\u5c06 x \u6070\u597d \u51cf\u5230 0 \uff0c\u8fd4\u56de \u6700\u5c0f\u64cd\u4f5c\u6570 \uff1b\u5426\u5219\uff0c\u8fd4\u56de -1 \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,1,4,2,3], x = 5  \n\u8f93\u51fa\uff1a2  \n\u89e3\u91ca\uff1a\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u662f\u79fb\u9664\u540e\u4e24\u4e2a\u5143\u7d20\uff0c\u5c06 x \u51cf\u5230 0 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [5,6,7,8,9], x = 4  \n\u8f93\u51fa\uff1a-1\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [3,2,20,1,1,3], x = 10  \n\u8f93\u51fa\uff1a5  \n\u89e3\u91ca\uff1a\u6700\u4f73\u89e3\u51b3\u65b9\u6848\u662f\u79fb\u9664\u540e\u4e09\u4e2a\u5143\u7d20\u548c\u524d\u4e24\u4e2a\u5143\u7d20\uff08\u603b\u5171 5 \u6b21\u64cd\u4f5c\uff09\uff0c\u5c06 x \u51cf\u5230 0 \u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= nums.length &lt;= 105 1 &lt;= nums[i] &lt;= 104 1 &lt;= x &lt;= 109  </p> \u601d\u8def <p>... \\(a_i\\) ... ... ... \\(a_j\\) ... \\(a_i\\)\u4e4b\u524d\uff08\u4e0d\u542b\uff09\u548c\\(a_j\\)\u4e4b\u540e\uff08\u4e0d\u542b\uff09\u7684\u5143\u7d20\u4e4b\u548c \u53ef\u4ee5\u8868\u8fbe\u4e3a\uff1a\u5168\u90e8\u5143\u7d20\u4e4b\u548c - \\(a_j\\)\uff08\u542b\uff09\u4e4b\u524d\u7684\u5143\u7d20\u4e4b\u548c + \\(a_i\\)\uff08\u4e0d\u542b\uff09\u4e4b\u524d\u7684\u5143\u7d20\u4e4b\u548c \\(a_j\\)\uff08\u542b\uff09\u4e4b\u524d\u7684\u5143\u7d20\u4e4b\u548c\uff1a\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u67e5\u8be2\u5f97\u51fa   \\(a_i\\)\uff08\u4e0d\u542b\uff09\u4e4b\u524d\u7684\u5143\u7d20\u4e4b\u548c\uff1a\u53ef\u4ee5\u7531\u524d\u7f00\u548c\u5f97\u51fa</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def minOperations(self, nums: List[int], x: int) -&gt; int:\n        sumNums=sum(nums)\n        if sumNums==x:\n            return len(nums)\n        d=dict()\n        d[0]=-1\n        preSum=0\n        res=0xffffffff\n        for j in range(len(nums)):\n            preSum+=nums[j]\n            if (t:=(x-(sumNums-preSum))) in d:\n                res=min(res,(len(nums)-j-1)+d[t]+1)\n            d[preSum]=min(d[preSum],j) if preSum in d else j\n        return res if res!=0xffffffff else -1\n</code></pre>"},{"location":"LeetCode/%E6%95%B0%E5%AD%A6/","title":"\u6570\u5b66","text":""},{"location":"LeetCode/%E6%95%B0%E5%AD%A6/#k","title":"\u96c7\u4f63 K \u540d\u5de5\u4eba\u7684\u6700\u4f4e\u6210\u672c","text":"<p>\u221a</p> <p>\u6709 n\u00a0\u540d\u5de5\u4eba\u3002\u00a0\u7ed9\u5b9a\u4e24\u4e2a\u6570\u7ec4\u00a0quality\u00a0\u548c\u00a0wage\u00a0\uff0c\u5176\u4e2d\uff0cquality[i]\u00a0\u8868\u793a\u7b2c\u00a0i\u00a0\u540d\u5de5\u4eba\u7684\u5de5\u4f5c\u8d28\u91cf\uff0c\u5176\u6700\u4f4e\u671f\u671b\u5de5\u8d44\u4e3a\u00a0wage[i]\u00a0\u3002</p> <p>\u73b0\u5728\u6211\u4eec\u60f3\u96c7\u4f63\u00a0k\u00a0\u540d\u5de5\u4eba\u7ec4\u6210\u4e00\u4e2a\u5de5\u8d44\u7ec4\u3002\u5728\u96c7\u4f63\u00a0\u4e00\u7ec4 k\u00a0\u540d\u5de5\u4eba\u65f6\uff0c\u6211\u4eec\u5fc5\u987b\u6309\u7167\u4e0b\u8ff0\u89c4\u5219\u5411\u4ed6\u4eec\u652f\u4ed8\u5de5\u8d44\uff1a</p> <p>\u5bf9\u5de5\u8d44\u7ec4\u4e2d\u7684\u6bcf\u540d\u5de5\u4eba\uff0c\u5e94\u5f53\u6309\u5176\u5de5\u4f5c\u8d28\u91cf\u4e0e\u540c\u7ec4\u5176\u4ed6\u5de5\u4eba\u7684\u5de5\u4f5c\u8d28\u91cf\u7684\u6bd4\u4f8b\u6765\u652f\u4ed8\u5de5\u8d44\u3002 \u5de5\u8d44\u7ec4\u4e2d\u7684\u6bcf\u540d\u5de5\u4eba\u81f3\u5c11\u5e94\u5f53\u5f97\u5230\u4ed6\u4eec\u7684\u6700\u4f4e\u671f\u671b\u5de5\u8d44\u3002 \u7ed9\u5b9a\u6574\u6570 k \uff0c\u8fd4\u56de \u7ec4\u6210\u6ee1\u8db3\u4e0a\u8ff0\u6761\u4ef6\u7684\u4ed8\u8d39\u7fa4\u4f53\u6240\u9700\u7684\u6700\u5c0f\u91d1\u989d\u00a0\u3002\u5728\u5b9e\u9645\u7b54\u6848\u7684\u00a010-5\u00a0\u4ee5\u5185\u7684\u7b54\u6848\u5c06\u88ab\u63a5\u53d7\u3002\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1a quality = [10,20,5], wage = [70,50,30], k = 2  \n\u8f93\u51fa\uff1a 105.00000  \n\u89e3\u91ca\uff1a \u6211\u4eec\u5411 0 \u53f7\u5de5\u4eba\u652f\u4ed8 70\uff0c\u5411 2 \u53f7\u5de5\u4eba\u652f\u4ed8 35\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1a quality = [3,1,10,10,1], wage = [4,8,2,2,7], k = 3  \n\u8f93\u51fa\uff1a 30.66667  \n\u89e3\u91ca\uff1a \u6211\u4eec\u5411 0 \u53f7\u5de5\u4eba\u652f\u4ed8 4\uff0c\u5411 2 \u53f7\u548c 3 \u53f7\u5206\u522b\u652f\u4ed8 13.33333\u3002\n</code></pre> <p>\u63d0\u793a\uff1a n == quality.length == wage.length 1 &lt;= k &lt;= n &lt;= 104</p> \u601d\u8def <p>\u5806 </p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def mincostToHireWorkers(self, quality: List[int], wage: List[int], k: int) -&gt; float:\n        maxHeap=[]\n        wq=sorted(zip(wage,quality),key=lambda x:x[0]/x[1])\n        sumQ=0\n        res=math.inf\n        for w,q in wq[:k-1]:\n            sumQ+=q\n            heappush(maxHeap,-q)\n\n        for w,q in wq[k-1:]:\n            sumQ+=q\n            heappush(maxHeap,-q)\n            res=min(res,w / q *sumQ)\n            sumQ+=heappop(maxHeap)\n\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%95%B0%E5%AD%A6/#k-1","title":"\u5f97\u5230\u8fde\u7eed K \u4e2a 1 \u7684\u6700\u5c11\u76f8\u90bb\u4ea4\u6362\u6b21\u6570","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \u548c\u4e00\u4e2a\u6574\u6570 k \u3002 nums \u4ec5\u5305\u542b 0 \u548c 1 \u3002\u6bcf\u4e00\u6b21\u79fb\u52a8\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9 \u76f8\u90bb \u4e24\u4e2a\u6570\u5b57\u5e76\u5c06\u5b83\u4eec\u4ea4\u6362\u3002</p> <p>\u8bf7\u4f60\u8fd4\u56de\u4f7f nums \u4e2d\u5305\u542b k \u4e2a \u8fde\u7eed 1 \u7684 \u6700\u5c11 \u4ea4\u6362\u6b21\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,0,0,1,0,1], k = 2\n\u8f93\u51fa\uff1a1\n\u89e3\u91ca\uff1a\u5728\u7b2c\u4e00\u6b21\u64cd\u4f5c\u65f6\uff0cnums \u53ef\u4ee5\u53d8\u6210 [1,0,0,0,1,1] \u5f97\u5230\u8fde\u7eed\u4e24\u4e2a 1 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,0,0,0,0,0,1,1], k = 3\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u901a\u8fc7 5 \u6b21\u64cd\u4f5c\uff0c\u6700\u5de6\u8fb9\u7684 1 \u53ef\u4ee5\u79fb\u5230\u53f3\u8fb9\u76f4\u5230 nums \u53d8\u4e3a [0,0,0,0,0,1,1,1] \u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,1,0,1], k = 2\n\u8f93\u51fa\uff1a0\n\u89e3\u91ca\uff1anums \u5df2\u7ecf\u6709\u8fde\u7eed 2 \u4e2a 1 \u4e86\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= nums.length &lt;= 105 nums[i] \u8981\u4e48\u662f 0 \uff0c\u8981\u4e48\u662f 1 \u3002 1 &lt;= k &lt;= sum(nums)  </p> \u601d\u8def <p>\u8bbe1\u7684\u4e0b\u6807\u4e3a\\(p_0,p_1,\u2026,p_m\\)\uff0c\u5c06\u5176\u4e2d\\(k\\)\u4e2a1(\u4ece\\(i\\)\u5f00\u59cb\uff0c\u5230\\(i+k-1\\))\u642c\u5230\u4e0b\u6807\u4ece\\(q\\)\u5f00\u59cb\u7684\u4f4d\u7f6e\u5219\u4ea4\u6362\u6b21\u6570\u4e3a\uff1a</p> \\[ \\sum_{j=i}^{i+k-1}{|q+j-i-p_j|} = \\sum_{j=i}^{i+k-1}{|q-i-(p_j-j)|} \\] <p>\u8fd9\u91cc\\(i\\),\\(q\\)\u662f\u81ea\u53d8\u91cf</p> <p>\u7531\u4e8e\\(p_j-j\\)\u975e\u9012\u51cf\uff0c\u90a3\u4e48\u8981\u4f7f\u4ea4\u6362\u6b21\u6570\u53d6\u5f97\u6700\u5c0f\u503c\uff0c\u5219\\(q-i\\)\u7b49\u4e8e\\(\\frac{p_j-j}{2}\\)</p> <p>\u8bbe\\(mid=\\frac{p_j-j}{2}\\),\u5219</p> \\[ \\begin{aligned} \\sum_{j=i}^{i+k-1}{|q-i-(p_j-j)|}&amp;=\\sum_{j=i}^{mid-1}{(p_j-j)-(q-i)}+\\sum_{j=mid}^{i+k-1}{(q-i)-(p_j-j)} \\\\ &amp;=\\sum_{j=i}^{mid-1}{-(q-i)}+\\sum_{j=i}^{mid-1}{p_j-j} \\end{aligned} \\] \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def minMoves(self, nums: List[int], k: int) -&gt; int:\n        g, preSum = [], [0]\n        for i, num in enumerate(nums):\n            if num == 1:\n                g.append(i - len(g))\n                preSum.append(preSum[-1] + g[-1])\n        m, res = len(g), inf\n        for i in range(m - k + 1):\n            mid = i + k // 2\n            r = g[mid]\n            res = min(res, (1 - k % 2) * r + (preSum[i + k] - preSum[mid + 1]) - (preSum[mid] - preSum[i]))\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"LeetCode/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/#o1","title":"\u63d2\u5165\u3001\u5220\u9664\u548c\u968f\u673a\u8bbf\u95ee\u90fd\u662f O(1) \u7684\u5bb9\u5668","text":"<p>\u8bbe\u8ba1\u4e00\u4e2a\u652f\u6301\u5728\u5e73\u5747\u00a0\u65f6\u95f4\u590d\u6742\u5ea6 O(1)\u00a0\u4e0b\uff0c\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u7684\u6570\u636e\u7ed3\u6784\uff1a</p> <ul> <li>insert(val)\uff1a\u5f53\u5143\u7d20 val \u4e0d\u5b58\u5728\u65f6\u8fd4\u56de true\u00a0\uff0c\u5e76\u5411\u96c6\u5408\u4e2d\u63d2\u5165\u8be5\u9879\uff0c\u5426\u5219\u8fd4\u56de false \u3002</li> <li>remove(val)\uff1a\u5f53\u5143\u7d20 val \u5b58\u5728\u65f6\u8fd4\u56de true\u00a0\uff0c\u5e76\u4ece\u96c6\u5408\u4e2d\u79fb\u9664\u8be5\u9879\uff0c\u5426\u5219\u8fd4\u56de false\u00a0\u3002</li> <li>getRandom\uff1a\u968f\u673a\u8fd4\u56de\u73b0\u6709\u96c6\u5408\u4e2d\u7684\u4e00\u9879\u3002\u6bcf\u4e2a\u5143\u7d20\u5e94\u8be5\u6709\u00a0\u76f8\u540c\u7684\u6982\u7387\u00a0\u88ab\u8fd4\u56de\u3002 \u00a0</li> </ul> <p>\u793a\u4f8b :</p> <pre><code>\u8f93\u5165: inputs = [\"RandomizedSet\", \"insert\", \"remove\", \"insert\", \"getRandom\", \"remove\", \"insert\", \"getRandom\"]  \n[[], [1], [2], [2], [], [1], [2], []]  \n\u8f93\u51fa: [null, true, false, true, 2, true, false, 2]  \n\u89e3\u91ca:  \nRandomizedSet randomSet = new RandomizedSet();  // \u521d\u59cb\u5316\u4e00\u4e2a\u7a7a\u7684\u96c6\u5408  \nrandomSet.insert(1); // \u5411\u96c6\u5408\u4e2d\u63d2\u5165 1 \uff0c \u8fd4\u56de true \u8868\u793a 1 \u88ab\u6210\u529f\u5730\u63d2\u5165\n\nrandomSet.remove(2); // \u8fd4\u56de false\uff0c\u8868\u793a\u96c6\u5408\u4e2d\u4e0d\u5b58\u5728 2\n\nrandomSet.insert(2); // \u5411\u96c6\u5408\u4e2d\u63d2\u5165 2 \u8fd4\u56de true \uff0c\u96c6\u5408\u73b0\u5728\u5305\u542b [1,2]\n\nrandomSet.getRandom(); // getRandom \u5e94\u968f\u673a\u8fd4\u56de 1 \u6216 2\n\nrandomSet.remove(1); // \u4ece\u96c6\u5408\u4e2d\u79fb\u9664 1 \u8fd4\u56de true \u3002\u96c6\u5408\u73b0\u5728\u5305\u542b [2]\n\nrandomSet.insert(2); // 2 \u5df2\u5728\u96c6\u5408\u4e2d\uff0c\u6240\u4ee5\u8fd4\u56de false\n\nrandomSet.getRandom(); // \u7531\u4e8e 2 \u662f\u96c6\u5408\u4e2d\u552f\u4e00\u7684\u6570\u5b57\uff0cgetRandom \u603b\u662f\u8fd4\u56de 2\n</code></pre> <p>\u63d0\u793a\uff1a -231\u00a0&lt;= val &lt;= 231\u00a0- 1 \u6700\u591a\u8fdb\u884c 2 * 105 \u6b21\u00a0insert \uff0c remove \u548c getRandom \u65b9\u6cd5\u8c03\u7528 \u5f53\u8c03\u7528\u00a0getRandom \u65b9\u6cd5\u65f6\uff0c\u96c6\u5408\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u5143\u7d20  </p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class RandomizedSet:\n    def __init__(self):\n        self.d=dict()\n        self.l=list()        \n\n    def insert(self, val: int) -&gt; bool:\n        if self.d.get(val) is not None:return False\n        self.d[val]=len(self.l)\n        self.l.append(val)\n        print(self.d,self.l)\n        return True\n\n    def remove(self, val: int) -&gt; bool:\n        if self.d.get(val) is None:return False\n        index=self.d[val]\n        self.l[index]=self.l[-1]  # \u4e0e\u5217\u8868\u6700\u540e\u4e00\u4e2a\u8c03\u6362\u5b9e\u73b0O(1)\u5220\u9664\u6539\u5143\u7d20\n        self.d[self.l[-1]]=index\n        self.d.pop(val)  # \u6ce8\u610f\u8fd9\u4e00\u6b65\u8981\u653e\u5728\u540e\u9762\uff0c\u56e0\u4e3a\u4e0a\u4e00\u6b65\u7684\u8bbf\u95ee\u4e0b\u6807\u4f1a\u751f\u6210\u65b0\u7684dict\n        self.l.pop()\n        print(self.d,self.l)\n        return True\n\n    def getRandom(self) -&gt; int:\n        return random.choice(self.l)\n</code></pre>"},{"location":"LeetCode/%E6%9E%9A%E4%B8%BE/","title":"\u679a\u4e3e","text":""},{"location":"LeetCode/%E6%9E%9A%E4%B8%BE/#_2","title":"\u5e8f\u5217\u4e2d\u4e0d\u540c\u6700\u5927\u516c\u7ea6\u6570\u7684\u6570\u76ee","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u7531\u6b63\u6574\u6570\u7ec4\u6210\u7684\u6570\u7ec4 nums \u3002</p> <p>\u6570\u5b57\u5e8f\u5217\u7684 \u6700\u5927\u516c\u7ea6\u6570 \u5b9a\u4e49\u4e3a\u5e8f\u5217\u4e2d\u6240\u6709\u6574\u6570\u7684\u5171\u6709\u7ea6\u6570\u4e2d\u7684\u6700\u5927\u6574\u6570\u3002</p> <ul> <li> <p>\u4f8b\u5982\uff0c\u5e8f\u5217 [4,6,16] \u7684\u6700\u5927\u516c\u7ea6\u6570\u662f 2 \u3002 \u6570\u7ec4\u7684\u4e00\u4e2a \u5b50\u5e8f\u5217 \u672c\u8d28\u662f\u4e00\u4e2a\u5e8f\u5217\uff0c\u53ef\u4ee5\u901a\u8fc7\u5220\u9664\u6570\u7ec4\u4e2d\u7684\u67d0\u4e9b\u5143\u7d20\uff08\u6216\u8005\u4e0d\u5220\u9664\uff09\u5f97\u5230\u3002</p> </li> <li> <p>\u4f8b\u5982\uff0c[2,5,10] \u662f [1,2,1,2,4,1,5,10] \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002 \u8ba1\u7b97\u5e76\u8fd4\u56de nums \u7684\u6240\u6709 \u975e\u7a7a \u5b50\u5e8f\u5217\u4e2d \u4e0d\u540c \u6700\u5927\u516c\u7ea6\u6570\u7684 \u6570\u76ee \u3002</p> </li> </ul> <p>\u793a\u4f8b 1\uff1a </p> <pre><code>\u8f93\u5165\uff1anums = [6,10,3]  \n\u8f93\u51fa\uff1a5  \n\u89e3\u91ca\uff1a\u4e0a\u56fe\u663e\u793a\u4e86\u6240\u6709\u7684\u975e\u7a7a\u5b50\u5e8f\u5217\u4e0e\u5404\u81ea\u7684\u6700\u5927\u516c\u7ea6\u6570\u3002\n\u4e0d\u540c\u7684\u6700\u5927\u516c\u7ea6\u6570\u4e3a 6 \u300110 \u30013 \u30012 \u548c 1 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [5,15,40,5,6]\n\u8f93\u51fa\uff1a7\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= nums.length &lt;= 105 1 &lt;= nums[i] &lt;= 2 * 105</p> \u601d\u8def <p>\u679a\u4e3e\u6240\u6709\u516c\u7ea6\u6570</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def countDifferentSubsequenceGCDs(self, nums: List[int]) -&gt; int:\n        maxNums=max(nums)\n        d=[False]*(maxNums+1)\n        for i in nums:\n            d[i]=True\n\n        res=0\n        for i in range(1,maxNums+1):\n            curGcd=0\n            for j in range(i,maxNums+1,i):\n                if d[j]:\n                    if curGcd==0:\n                        curGcd=j\n                    else:\n                        curGcd=math.gcd(j,curGcd)\n\n                if curGcd==i:\n                    res+=1\n                    break\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%9E%9A%E4%B8%BE/#_3","title":"\u62fc\u63a5\u6700\u5927\u6570","text":"<p>\u7ed9\u5b9a\u957f\u5ea6\u5206\u522b\u4e3a<code>m</code>\u548c\u00a0<code>n</code>\u7684\u4e24\u4e2a\u6570\u7ec4\uff0c\u5176\u5143\u7d20\u7531<code>0-9</code>\u6784\u6210\uff0c\u8868\u793a\u4e24\u4e2a\u81ea\u7136\u6570\u5404\u4f4d\u4e0a\u7684\u6570\u5b57\u3002\u73b0\u5728\u4ece\u8fd9\u4e24\u4e2a\u6570\u7ec4\u4e2d\u9009\u51fa <code>k (k &lt;= m + n)</code>\u4e2a\u6570\u5b57\u62fc\u63a5\u6210\u4e00\u4e2a\u65b0\u7684\u6570\uff0c\u8981\u6c42\u4ece\u540c\u4e00\u4e2a\u6570\u7ec4\u4e2d\u53d6\u51fa\u7684\u6570\u5b57\u4fdd\u6301\u5176\u5728\u539f\u6570\u7ec4\u4e2d\u7684\u76f8\u5bf9\u987a\u5e8f\u3002</p> <p>\u6c42\u6ee1\u8db3\u8be5\u6761\u4ef6\u7684\u6700\u5927\u6570\u3002\u7ed3\u679c\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8be5\u6700\u5927\u6570\u7684\u957f\u5ea6\u4e3a<code>k</code>\u7684\u6570\u7ec4\u3002</p> <p>\u793a\u4f8b\u00a01:</p> <pre><code>\u8f93\u5165:\nnums1 = [3, 4, 6, 5]\nnums2 = [9, 1, 2, 5, 8, 3]\nk = 5\n\u8f93\u51fa:\n[9, 8, 6, 5, 3]\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165:\nnums1 = [6, 7]\nnums2 = [6, 0, 4]\nk = 5\n\u8f93\u51fa:\n[6, 7, 6, 0, 4]\n</code></pre> <p>\u793a\u4f8b 3:</p> <pre><code>\u8f93\u5165:\nnums1 = [3, 9]\nnums2 = [8, 9]\nk = 3\n\u8f93\u51fa:\n[9, 8, 9]\n</code></pre> \u601d\u8def <ol> <li>\u679a\u4e3ex\uff0cnums1\u53d6x\u4e2a\u6700\u5927\u5b50\u5e8f\u5217\uff0cnums2\u53d6y\u4e2a\u6700\u5927\u5b50\u5e8f\u5217  \\(y=k-x\\)</li> <li>\u5408\u6210\u4e0a\u9762\u4e24\u4e2a\u5b50\u5e8f\u5217(\u6613\u9519\u70b9)</li> <li>\u6bd4\u8f83\u6240\u6709\u7b2c\u4e8c\u6b65\u5408\u6210\u7684\u7ed3\u679c\uff0c\u9009\u51fa\u7b54\u6848</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def maxNumber(self, nums1: List[int], nums2: List[int], k: int) -&gt; List[int]:\n        def get(nums,k):\n            # \u83b7\u53d6nums\u4e2d\u957f\u5ea6\u4e3ak\u7684\u6700\u5927\u5b50\u5e8f\u5217\n            stack=deque()\n            i=0\n            while i&lt;len(nums):\n                if len(stack)==0 or stack[-1]&gt;=nums[i] or k-len(stack)&gt;=len(nums)-i:\n                    stack.append(nums[i])\n                    i+=1\n                else:\n                    stack.pop()\n            while len(stack)&gt;k:\n                stack.pop()\n\n            return list(stack)\n\n        def merge(nums1,nums2):\n            # \u5408\u5e76\u4e24\u4e2a\u5b50\u5e8f\u5217\u5f97\u5230\u6700\u5927\u6570\n            i=j=0\n            res=[]\n            while i&lt;len(nums1) and j&lt;len(nums2):\n                if nums1[i]&lt;nums2[j]:\n                    res.append(nums2[j])\n                    j+=1\n                elif nums1[i]&gt;nums2[j]:\n                    res.append(nums1[i])\n                    i+=1\n                else:\n                    if not compare(nums1[i:],nums2[j:]):\n                        res.append(nums1[i])\n                        i+=1\n                    else:\n                        res.append(nums2[j])\n                        j+=1\n            if i==len(nums1):\n                res+=nums2[j:]\n            else:\n                res+=nums1[i:]\n            return res\n        def compare(nums1,nums2): # if nums2&gt;nums1: return True\n            # notice this function\n            if not nums1:return True\n            if not nums2:return False\n            # if nums1&lt;nums2 return True\n            for i,j in zip(nums1,nums2):\n                if i&lt;j:\n                    return True\n                elif i&gt;j:\n                    return False\n            if len(nums1)==len(nums2):\n                return False\n            elif len(nums1)&gt;len(nums2):\n                if nums1[len(nums2)]&gt;=nums1[0]:\n                    return False\n                else:\n                    return True\n            else:\n                if nums2[len(nums1)]&gt;=nums2[0]:\n                    return True\n                else:\n                    return False\n\n        res=[0]*k\n        for x in range(min(k,len(nums1))+1):\n            if k-x&lt;=len(nums2):\n                seq1=get(nums1,x)\n                seq2=get(nums2,k-x)\n                seq=merge(seq1,seq2)\n                if compare(res,seq):\n                    res=seq\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%A0%88/","title":"\u6808","text":""},{"location":"LeetCode/%E6%A0%88/#_2","title":"\u5c0f\u884c\u661f\u78b0\u649e","text":"<p>\u221a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4<code>asteroids</code>\uff0c\u8868\u793a\u5728\u540c\u4e00\u884c\u7684\u5c0f\u884c\u661f\u3002</p> <p>\u5bf9\u4e8e\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5176\u7edd\u5bf9\u503c\u8868\u793a\u5c0f\u884c\u661f\u7684\u5927\u5c0f\uff0c\u6b63\u8d1f\u8868\u793a\u5c0f\u884c\u661f\u7684\u79fb\u52a8\u65b9\u5411\uff08\u6b63\u8868\u793a\u5411\u53f3\u79fb\u52a8\uff0c\u8d1f\u8868\u793a\u5411\u5de6\u79fb\u52a8\uff09\u3002\u6bcf\u4e00\u9897\u5c0f\u884c\u661f\u4ee5\u76f8\u540c\u7684\u901f\u5ea6\u79fb\u52a8\u3002</p> <p>\u627e\u51fa\u78b0\u649e\u540e\u5269\u4e0b\u7684\u6240\u6709\u5c0f\u884c\u661f\u3002\u78b0\u649e\u89c4\u5219\uff1a\u4e24\u4e2a\u884c\u661f\u76f8\u4e92\u78b0\u649e\uff0c\u8f83\u5c0f\u7684\u884c\u661f\u4f1a\u7206\u70b8\u3002\u5982\u679c\u4e24\u9897\u884c\u661f\u5927\u5c0f\u76f8\u540c\uff0c\u5219\u4e24\u9897\u884c\u661f\u90fd\u4f1a\u7206\u70b8\u3002\u4e24\u9897\u79fb\u52a8\u65b9\u5411\u76f8\u540c\u7684\u884c\u661f\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1aasteroids = [5,10,-5]  \n\u8f93\u51fa\uff1a[5,10]  \n\u89e3\u91ca\uff1a10 \u548c -5 \u78b0\u649e\u540e\u53ea\u5269\u4e0b 10 \u3002 5 \u548c 10 \u6c38\u8fdc\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aasteroids = [8,-8]  \n\u8f93\u51fa\uff1a[]  \n\u89e3\u91ca\uff1a8 \u548c -8 \u78b0\u649e\u540e\uff0c\u4e24\u8005\u90fd\u53d1\u751f\u7206\u70b8\u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1aasteroids = [10,2,-5]  \n\u8f93\u51fa\uff1a[10]  \n\u89e3\u91ca\uff1a2 \u548c -5 \u53d1\u751f\u78b0\u649e\u540e\u5269\u4e0b -5 \u300210 \u548c -5 \u53d1\u751f\u78b0\u649e\u540e\u5269\u4e0b 10 \u3002\n</code></pre> <p>\u793a\u4f8b 4\uff1a</p> <pre><code>\u8f93\u5165\uff1aasteroids = [-2,-1,1,2]  \n\u8f93\u51fa\uff1a[-2,-1,1,2]  \n\u89e3\u91ca\uff1a-2 \u548c -1 \u5411\u5de6\u79fb\u52a8\uff0c\u800c 1 \u548c 2 \u5411\u53f3\u79fb\u52a8\u3002 \u7531\u4e8e\u79fb\u52a8\u65b9\u5411\u76f8\u540c\u7684\u884c\u661f\u4e0d\u4f1a\u53d1\u751f\u78b0\u649e\uff0c\u6240\u4ee5\u6700\u7ec8\u6ca1\u6709\u884c\u661f\u53d1\u751f\u78b0\u649e\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 2 &lt;= asteroids.length\u00a0&lt;= 104 -1000 &lt;= asteroids[i] &lt;= 1000 asteroids[i] != 0  </p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def asteroidCollision(self, asteroids: List[int]) -&gt; List[int]:\n        s=deque()\n        s.append(asteroids[0])\n        i=1\n        while i&lt;len(asteroids):\n            if s[-1]*asteroids[i]&gt;0 or (s[-1]&lt;0 and asteroids[i]&gt;0):\n                s.append(asteroids[i])\n            else:\n                if s[-1]==-asteroids[i]:\n                    s.pop()\n                else:\n                    if s[-1]&lt;-asteroids[i]:\n                        s.pop()\n                        continue\n            i+=1       \n\n\n\n        return list(s)\n</code></pre>"},{"location":"LeetCode/%E6%A0%88/#_3","title":"\u6bcf\u65e5\u6e29\u5ea6","text":"<p>\u221a</p> <p>\u8bf7\u6839\u636e\u6bcf\u65e5 \u6c14\u6e29 \u5217\u8868 temperatures \uff0c\u91cd\u65b0\u751f\u6210\u4e00\u4e2a\u5217\u8868\uff0c\u8981\u6c42\u5176\u5bf9\u5e94\u4f4d\u7f6e\u7684\u8f93\u51fa\u4e3a\uff1a\u8981\u60f3\u89c2\u6d4b\u5230\u66f4\u9ad8\u7684\u6c14\u6e29\uff0c\u81f3\u5c11\u9700\u8981\u7b49\u5f85\u7684\u5929\u6570\u3002\u5982\u679c\u6c14\u6e29\u5728\u8fd9\u4e4b\u540e\u90fd\u4e0d\u4f1a\u5347\u9ad8\uff0c\u8bf7\u5728\u8be5\u4f4d\u7f6e\u7528 0 \u6765\u4ee3\u66ff\u3002</p> <p>\u793a\u4f8b 1: </p> <pre><code>\u8f93\u5165: temperatures = [73,74,75,71,69,72,76,73]  \n\u8f93\u51fa: [1,1,4,2,1,1,0,0]\n</code></pre> <p>\u793a\u4f8b 2: </p> <pre><code>\u8f93\u5165: temperatures = [30,40,50,60]  \n\u8f93\u51fa: [1,1,1,0]\n</code></pre> <p>\u793a\u4f8b 3: </p> <pre><code>\u8f93\u5165: temperatures = [30,60,90]  \n\u8f93\u51fa: [1,1,0]\n</code></pre> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def dailyTemperatures(self, temperatures: List[int]) -&gt; List[int]:\n        s=deque()\n        res=[0]*len(temperatures)\n        s.append([temperatures[0],0])\n        index=1\n        while index&lt;len(temperatures):\n            if len(s)==0:s.append([temperatures[index],index])\n            if temperatures[index]&gt;s[-1][0]:\n                res[s[-1][1]]=index-s[-1][1]\n                s.pop()\n            else:\n                s.append([temperatures[index],index])\n                index+=1\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%A0%88/#_4","title":"\u76f4\u65b9\u56fe\u6700\u5927\u77e9\u5f62\u9762\u79ef","text":"<p>\u221a</p> <p>\u7ed9\u5b9a\u975e\u8d1f\u6574\u6570\u6570\u7ec4 heights \uff0c\u6570\u7ec4\u4e2d\u7684\u6570\u5b57\u7528\u6765\u8868\u793a\u67f1\u72b6\u56fe\u4e2d\u5404\u4e2a\u67f1\u5b50\u7684\u9ad8\u5ea6\u3002\u6bcf\u4e2a\u67f1\u5b50\u5f7c\u6b64\u76f8\u90bb\uff0c\u4e14\u5bbd\u5ea6\u4e3a 1 \u3002 \u6c42\u5728\u8be5\u67f1\u72b6\u56fe\u4e2d\uff0c\u80fd\u591f\u52fe\u52d2\u51fa\u6765\u7684\u77e9\u5f62\u7684\u6700\u5927\u9762\u79ef\u3002</p> <p>\u793a\u4f8b 1: </p> <pre><code>\u8f93\u5165\uff1aheights = [2,1,5,6,2,3]  \n\u8f93\u51fa\uff1a10  \n\u89e3\u91ca\uff1a\u6700\u5927\u7684\u77e9\u5f62\u4e3a\u56fe\u4e2d\u7ea2\u8272\u533a\u57df\uff0c\u9762\u79ef\u4e3a 10\n</code></pre> <p>\u793a\u4f8b 2\uff1a </p> <pre><code>\u8f93\u5165\uff1a heights = [2,4]  \n\u8f93\u51fa\uff1a 4\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= heights.length &lt;=105 0 &lt;= heights[i] &lt;= 104</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def largestRectangleArea(self, heights: List[int]) -&gt; int:\n        heights=[0]+heights+[0]\n        res=0\n        s=deque()\n        i=0\n        while i&lt;len(heights):\n            if len(s)==0 or heights[s[-1]]&lt;=heights[i]:\n                s.append(i)\n                i+=1   \n            else:\n                p=s.pop()\n                res=max(res,heights[p]*(i-s[-1]-1))\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%A0%88/#_5","title":"\u5b50\u6570\u7ec4\u6700\u5c0f\u4e58\u79ef\u7684\u6700\u5927\u503c","text":"<p>\u4e00\u4e2a\u6570\u7ec4\u7684 \u6700\u5c0f\u4e58\u79ef \u5b9a\u4e49\u4e3a\u8fd9\u4e2a\u6570\u7ec4\u4e2d \u6700\u5c0f\u503c \u4e58\u4ee5 \u6570\u7ec4\u7684 \u548c \u3002</p> <ul> <li>\u6bd4\u65b9\u8bf4\uff0c\u6570\u7ec4 [3,2,5] \uff08\u6700\u5c0f\u503c\u662f 2\uff09\u7684\u6700\u5c0f\u4e58\u79ef\u4e3a 2 * (3+2+5) = 2 * 10 = 20 \u3002 </li> </ul> <p>\u7ed9\u4f60\u4e00\u4e2a\u6b63\u6574\u6570\u6570\u7ec4 nums \uff0c\u8bf7\u4f60\u8fd4\u56de nums \u4efb\u610f \u975e\u7a7a\u5b50\u6570\u7ec4 \u7684\u6700\u5c0f\u4e58\u79ef \u7684 \u6700\u5927\u503c \u3002\u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u8bf7\u4f60\u8fd4\u56de\u7b54\u6848\u5bf9  109 + 7 \u53d6\u4f59 \u7684\u7ed3\u679c\u3002  </p> <p>\u8bf7\u6ce8\u610f\uff0c\u6700\u5c0f\u4e58\u79ef\u7684\u6700\u5927\u503c\u8003\u8651\u7684\u662f\u53d6\u4f59\u64cd\u4f5c \u4e4b\u524d \u7684\u7ed3\u679c\u3002\u9898\u76ee\u4fdd\u8bc1\u6700\u5c0f\u4e58\u79ef\u7684\u6700\u5927\u503c\u5728 \u4e0d\u53d6\u4f59 \u7684\u60c5\u51b5\u4e0b\u53ef\u4ee5\u7528 64 \u4f4d\u6709\u7b26\u53f7\u6574\u6570 \u4fdd\u5b58\u3002  </p> <p>\u5b50\u6570\u7ec4 \u5b9a\u4e49\u4e3a\u4e00\u4e2a\u6570\u7ec4\u7684 \u8fde\u7eed \u90e8\u5206\u3002  </p> <p>\u793a\u4f8b 1\uff1a </p> <pre><code>\u8f93\u5165\uff1anums = [1,2,3,2]  \n\u8f93\u51fa\uff1a14  \n\u89e3\u91ca\uff1a\u6700\u5c0f\u4e58\u79ef\u7684\u6700\u5927\u503c\u7531\u5b50\u6570\u7ec4 [2,3,2] \uff08\u6700\u5c0f\u503c\u662f 2\uff09\u5f97\u5230\u3002\n2 * (2+3+2) = 2 * 7 = 14 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a </p> <pre><code>\u8f93\u5165\uff1anums = [2,3,3,1,2]  \n\u8f93\u51fa\uff1a18  \n\u89e3\u91ca\uff1a\u6700\u5c0f\u4e58\u79ef\u7684\u6700\u5927\u503c\u7531\u5b50\u6570\u7ec4 [3,3] \uff08\u6700\u5c0f\u503c\u662f 3\uff09\u5f97\u5230\u3002\n3 * (3+3) = 3 * 6 = 18 \u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [3,1,5,6,4,2]\n\u8f93\u51fa\uff1a60\n\u89e3\u91ca\uff1a\u6700\u5c0f\u4e58\u79ef\u7684\u6700\u5927\u503c\u7531\u5b50\u6570\u7ec4 [5,6,4] \uff08\u6700\u5c0f\u503c\u662f 4\uff09\u5f97\u5230\u3002\n4 * (5+6+4) = 4 * 15 = 60 \u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= nums.length &lt;= 105 1 &lt;= nums[i] &lt;= 107  </p> \u601d\u8def <p>\u524d\u7f00\u548c</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def maxSumMinProduct(self, nums: List[int]) -&gt; int:\n        nums=nums+[0]\n        s=deque([0])\n        prefix_sum=[0]\n        for i in nums:prefix_sum.append(prefix_sum[-1]+i)\n        nums=[0]+nums\n        i=1\n        res=0\n        while i&lt;len(nums):\n            if nums[s[-1]]&lt;=nums[i]:\n                s.append(i)\n                i+=1\n            else:\n                _min=s.pop()\n                res=max(res,nums[_min]*(prefix_sum[i-1]-prefix_sum[s[-1]]))\n        return res%((10**9)+7)\n</code></pre>"},{"location":"LeetCode/%E6%A0%88/#_6","title":"\u5b50\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e4b\u548c","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 arr\uff0c\u627e\u5230 min(b) \u7684\u603b\u548c\uff0c\u5176\u4e2d b \u7684\u8303\u56f4\u4e3a arr \u7684\u6bcf\u4e2a\uff08\u8fde\u7eed\uff09\u5b50\u6570\u7ec4\u3002 \u7531\u4e8e\u7b54\u6848\u53ef\u80fd\u5f88\u5927\uff0c\u56e0\u6b64 \u8fd4\u56de\u7b54\u6848\u6a21 10^9 + 7 \u3002</p> <p>\u793a\u4f8b 1\uff1a </p> <pre><code>\u8f93\u5165\uff1aarr = [3,1,2,4]  \n\u8f93\u51fa\uff1a17  \n\u89e3\u91ca\uff1a  \n\u5b50\u6570\u7ec4\u4e3a [3]\uff0c[1]\uff0c[2]\uff0c[4]\uff0c[3,1]\uff0c[1,2]\uff0c[2,4]\uff0c[3,1,2]\uff0c[1,2,4]\uff0c[3,1,2,4]\u3002   \n\u6700\u5c0f\u503c\u4e3a 3\uff0c1\uff0c2\uff0c4\uff0c1\uff0c1\uff0c2\uff0c1\uff0c1\uff0c1\uff0c\u548c\u4e3a 17\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1aarr = [11,81,94,43,3]  \n\u8f93\u51fa\uff1a444\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= arr.length &lt;= 3 * 104 1 &lt;= arr[i] &lt;= 3 * 104  </p> \u601d\u8def <p>\u8d8a\u5c0f\u8d8a\u8981\u4fdd\u5b58\u5728\u6808\u5e95</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def sumSubarrayMins(self, arr: List[int]) -&gt; int:\n        arr=[-1]+arr+[-1]\n        s=deque()\n        i=0\n        res=0\n        while i&lt;len(arr):\n            if not s or arr[s[-1]]&lt;arr[i]:\n                s.append(i)\n                i+=1\n            else:\n                rear=s.pop()\n                if not s:break\n                left=rear-s[-1]\n                right=i-rear\n                res+=left*right*arr[rear]\n        return res%(10**9 + 7)\n</code></pre>"},{"location":"LeetCode/%E6%A0%88/#_7","title":"\u6808\u7684\u6700\u5c0f\u503c","text":"<p>\u8bf7\u8bbe\u8ba1\u4e00\u4e2a\u6808\uff0c\u9664\u4e86\u5e38\u89c4\u6808\u652f\u6301\u7684pop\u4e0epush\u51fd\u6570\u4ee5\u5916\uff0c\u8fd8\u652f\u6301min\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u8fd4\u56de\u6808\u5143\u7d20\u4e2d\u7684\u6700\u5c0f\u503c\u3002\u6267\u884cpush\u3001pop\u548cmin\u64cd\u4f5c\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5fc5\u987b\u4e3aO(1)\u3002</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>MinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --&gt; \u8fd4\u56de -3.\nminStack.pop();\nminStack.top();      --&gt; \u8fd4\u56de 0.\n</code></pre> \u601d\u8def <p>\u53c2\u8003\u5b98\u65b9\u9898\u89e3\uff1ahttps://leetcode.cn/problems/min-stack-lcci/solution/zhan-de-zui-xiao-zhi-by-leetcode-solutio-dg9n/</p> \u793a\u4f8b\u4ee3\u7801 <p>TODO</p>"},{"location":"LeetCode/%E6%A0%88/#_8","title":"\u53bb\u9664\u91cd\u590d\u5b57\u6bcd","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \uff0c\u8bf7\u4f60\u53bb\u9664\u5b57\u7b26\u4e32\u4e2d\u91cd\u590d\u7684\u5b57\u6bcd\uff0c\u4f7f\u5f97\u6bcf\u4e2a\u5b57\u6bcd\u53ea\u51fa\u73b0\u4e00\u6b21\u3002\u9700\u4fdd\u8bc1 \u8fd4\u56de\u7ed3\u679c\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\uff08\u8981\u6c42\u4e0d\u80fd\u6253\u4e71\u5176\u4ed6\u5b57\u7b26\u7684\u76f8\u5bf9\u4f4d\u7f6e\uff09\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"bcabc\"  \n\u8f93\u51fa\uff1a\"abc\"\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"cbacdcbc\"  \n\u8f93\u51fa\uff1a\"acdb\"\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= s.length &lt;= 104 s \u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210</p> \u601d\u8def <pre><code>\u5982\u679c stack[-1] &lt; s[i]  \n    \u8fdb\u6808  \n\u5426\u5219 s[i]&gt;=s[i]  \n    \u5982\u679c\u540e\u9762\u8fd8\u6709s[-1]\u7684\u8bdd\uff0c\u51fa\u6808  \n    \u6ca1\u6709\u7684\u8bdd\uff0c\u8fdb\u6808  \n\u5927\u524d\u63d0\uff1as[i]\u4e0d\u5728\u6808\u5185\n</code></pre> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def removeDuplicateLetters(self, s: str) -&gt; str:\n        c=Counter(s)\n        stack=deque()\n        visite=[False]*26\n        i=0\n        while i&lt;len(s):\n            if visite[ord(s[i])-ord('a')]:\n                c[s[i]]-=1\n                i+=1\n                continue\n            if (not stack or stack[-1]&lt;s[i] or c[s[-1]==0]):\n                visite[ord(s[i])-ord('a')]=True\n                stack.append(s[i])\n                c[s[i]]-=1\n                i+=1\n            else:\n                while stack and stack[-1]&gt;=s[i] and c[stack[-1]]&gt;0:\n                    visite[ord(stack.pop())-ord('a')]=False\n\n                stack.append(s[i])\n                c[s[i]]-=1\n                visite[ord(s[i])-ord('a')]=True\n                i+=1\n        return \"\".join(stack)\n</code></pre>"},{"location":"LeetCode/%E6%A1%B6%E6%8E%92%E5%BA%8F/","title":"\u6876\u6392\u5e8f","text":""},{"location":"LeetCode/%E6%A1%B6%E6%8E%92%E5%BA%8F/#_2","title":"\u6700\u5927\u95f4\u8ddd","text":"<p>\u7ed9\u5b9a\u4e00\u4e2a\u65e0\u5e8f\u7684\u6570\u7ec4 nums\uff0c\u8fd4\u56de \u6570\u7ec4\u5728\u6392\u5e8f\u4e4b\u540e\uff0c\u76f8\u90bb\u5143\u7d20\u4e4b\u95f4\u6700\u5927\u7684\u5dee\u503c \u3002\u5982\u679c\u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e 2\uff0c\u5219\u8fd4\u56de 0 \u3002</p> <p>\u60a8\u5fc5\u987b\u7f16\u5199\u4e00\u4e2a\u5728\u300c\u7ebf\u6027\u65f6\u95f4\u300d\u5185\u8fd0\u884c\u5e76\u4f7f\u7528\u300c\u7ebf\u6027\u989d\u5916\u7a7a\u95f4\u300d\u7684\u7b97\u6cd5\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165: nums = [3,6,9,1]\n\u8f93\u51fa: 3\n\u89e3\u91ca: \u6392\u5e8f\u540e\u7684\u6570\u7ec4\u662f [1,3,6,9], \u5176\u4e2d\u76f8\u90bb\u5143\u7d20 (3,6) \u548c (6,9) \u4e4b\u95f4\u90fd\u5b58\u5728\u6700\u5927\u5dee\u503c 3\u3002\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165: nums = [10]\n\u8f93\u51fa: 0\n\u89e3\u91ca: \u6570\u7ec4\u5143\u7d20\u4e2a\u6570\u5c0f\u4e8e 2\uff0c\u56e0\u6b64\u8fd4\u56de 0\u3002\n</code></pre> <p>\u63d0\u793a: 1 &lt;= nums.length &lt;= 105 0 &lt;= nums[i] &lt;= 109</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def maximumGap(self, nums: List[int]) -&gt; int:\n        if len(nums)==1:return 0\n        _min,_max=min(nums),max(nums)\n        d=math.ceil((_max-_min)/(len(nums)-1)) # !!! size of bucket \n        if d==0:\n            return 0\n        bucket=[[10**9+1 ,-1] for _ in range(len(nums))] # !!! len(bucket)==len(nums)\n        for i in nums:\n            idx=(i-_min)//d\n            bucket[idx][0]=min(bucket[idx][0],i)\n            bucket[idx][1]=max(bucket[idx][1],i)\n        pre=bucket[0][0]\n        res=0\n        for i,j in bucket:\n            if i&lt;=j:\n                res=max(res,i-pre,j-i)\n                pre=j\n        return res\n</code></pre>"},{"location":"LeetCode/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/","title":"\u6ed1\u52a8\u7a97\u53e3","text":""},{"location":"LeetCode/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3/#_2","title":"\u66ff\u6362\u540e\u7684\u6700\u957f\u91cd\u590d\u5b57\u7b26","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32 s \u548c\u4e00\u4e2a\u6574\u6570 k \u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u5b57\u7b26\u4e32\u4e2d\u7684\u4efb\u4e00\u5b57\u7b26\uff0c\u5e76\u5c06\u5176\u66f4\u6539\u4e3a\u4efb\u4f55\u5176\u4ed6\u5927\u5199\u82f1\u6587\u5b57\u7b26\u3002\u8be5\u64cd\u4f5c\u6700\u591a\u53ef\u6267\u884c k \u6b21\u3002</p> <p>\u5728\u6267\u884c\u4e0a\u8ff0\u64cd\u4f5c\u540e\uff0c\u8fd4\u56de\u5305\u542b\u76f8\u540c\u5b57\u6bcd\u7684\u6700\u957f\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"ABAB\", k = 2  \n\u8f93\u51fa\uff1a4  \n\u89e3\u91ca\uff1a\u7528\u4e24\u4e2a'A'\u66ff\u6362\u4e3a\u4e24\u4e2a'B',\u53cd\u4e4b\u4ea6\u7136\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"AABABBA\", k = 1  \n\u8f93\u51fa\uff1a4  \n\u89e3\u91ca\uff1a  \n\u5c06\u4e2d\u95f4\u7684\u4e00\u4e2a'A'\u66ff\u6362\u4e3a'B',\u5b57\u7b26\u4e32\u53d8\u4e3a \"AABBBBA\"\u3002  \n\u5b50\u4e32 \"BBBB\" \u6709\u6700\u957f\u91cd\u590d\u5b57\u6bcd, \u7b54\u6848\u4e3a 4\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= s.length &lt;= 105 s \u4ec5\u7531\u5927\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210 0 &lt;= k &lt;= s.length</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def characterReplacement(self, s: str, k: int) -&gt; int:\n        i,j=0,0\n        d=[0]*26\n        res=0\n        while j&lt;len(s):\n            _class=sum(d)-max(d)\n            if _class&gt;k:\n                d[ord(s[i])-ord('A')]-=1\n                i+=1\n            else:\n                res=max(res,j-i)\n                d[ord(s[j])-ord('A')]+=1\n                j+=1\n        while i&lt;len(s):\n            _class=sum(d)-max(d)\n            if _class&lt;=k:\n                res=max(res,j-i)    \n            d[ord(s[i])-ord('A')]-=1\n            i+=1\n        return res\n</code></pre>"},{"location":"LeetCode/%E8%84%91%E7%AD%8B%E6%80%A5%E8%BD%AC%E5%BC%AF/","title":"\u8111\u7b4b\u6025\u8f6c\u5f2f","text":""},{"location":"LeetCode/%E8%84%91%E7%AD%8B%E6%80%A5%E8%BD%AC%E5%BC%AF/#_2","title":"\u88c5\u6ee1\u676f\u5b50\u9700\u8981\u7684\u6700\u77ed\u603b\u65f6\u957f","text":"<p>\u73b0\u6709\u4e00\u53f0\u996e\u6c34\u673a\uff0c\u53ef\u4ee5\u5236\u5907\u51b7\u6c34\u3001\u6e29\u6c34\u548c\u70ed\u6c34\u3002\u6bcf\u79d2\u949f\uff0c\u53ef\u4ee5\u88c5\u6ee1 2 \u676f \u4e0d\u540c \u7c7b\u578b\u7684\u6c34\u6216\u8005 1 \u676f\u4efb\u610f\u7c7b\u578b\u7684\u6c34\u3002 \u7ed9\u4f60\u4e00\u4e2a\u4e0b\u6807\u4ece 0 \u5f00\u59cb\u3001\u957f\u5ea6\u4e3a 3 \u7684\u6574\u6570\u6570\u7ec4 amount \uff0c\u5176\u4e2d amount[0]\u3001amount[1] \u548c amount[2] \u5206\u522b\u8868\u793a\u9700\u8981\u88c5\u6ee1\u51b7\u6c34\u3001\u6e29\u6c34\u548c\u70ed\u6c34\u7684\u676f\u5b50\u6570\u91cf\u3002\u8fd4\u56de\u88c5\u6ee1\u6240\u6709\u676f\u5b50\u6240\u9700\u7684\u6700\u5c11 \u79d2\u6570\u3002</p> <p>\u793a\u4f8b 1:</p> <pre><code>\u8f93\u5165\uff1aamount = [1,4,2]\n\u8f93\u51fa\uff1a4\n\u89e3\u91ca\uff1a\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u65b9\u6848\uff1a\n\u7b2c 1 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u548c\u4e00\u676f\u6e29\u6c34\u3002\n\u7b2c 2 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u6e29\u6c34\u548c\u4e00\u676f\u70ed\u6c34\u3002\n\u7b2c 3 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u6e29\u6c34\u548c\u4e00\u676f\u70ed\u6c34\u3002\n\u7b2c 4 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u6e29\u6c34\u3002\n\u53ef\u4ee5\u8bc1\u660e\u6700\u5c11\u9700\u8981 4 \u79d2\u624d\u80fd\u88c5\u6ee1\u6240\u6709\u676f\u5b50\u3002\n</code></pre> <p>\u793a\u4f8b 2:</p> <pre><code>\u8f93\u5165\uff1aamount = [5,4,4]\n\u8f93\u51fa\uff1a7\n\u89e3\u91ca\uff1a\u4e0b\u9762\u7ed9\u51fa\u4e00\u79cd\u65b9\u6848\uff1a\n\u7b2c 1 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u548c\u4e00\u676f\u70ed\u6c34\u3002\n\u7b2c 2 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u548c\u4e00\u676f\u6e29\u6c34\u3002\n\u7b2c 3 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u548c\u4e00\u676f\u6e29\u6c34\u3002\n\u7b2c 4 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u6e29\u6c34\u548c\u4e00\u676f\u70ed\u6c34\u3002\n\u7b2c 5 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u548c\u4e00\u676f\u70ed\u6c34\u3002\n\u7b2c 6 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u548c\u4e00\u676f\u6e29\u6c34\u3002\n\u7b2c 7 \u79d2\uff1a\u88c5\u6ee1\u4e00\u676f\u70ed\u6c34\u3002\n</code></pre> <p>\u793a\u4f8b 3:</p> <pre><code>\u8f93\u5165\uff1aamount = [5,0,0]\n\u8f93\u51fa\uff1a5\n\u89e3\u91ca\uff1a\u6bcf\u79d2\u88c5\u6ee1\u4e00\u676f\u51b7\u6c34\u3002\n</code></pre> \u601d\u8def <p>\u5047\u8bbeamount\u6392\u5e8f\u540e\uff0ca,b,c=amount[1,2,3]</p> <p>\u5982\u679cc&gt;=a+b\uff0c\u90a3\u4e48\u88c5\u6c34\u6b21\u6570=c</p> <p>\u5426\u5219\u5c06c\u5206\u7ed9a\uff0cb\uff0c\u4f7fa\u548cb\u5c3d\u91cf\u63a5\u8fd1\u3002\u88c5\u6c34\u6b21\u6570+=c \u4e4b\u540e\u5982\u679ca==b\uff0c\u4e5f\u5c31\u662fa+b-c\u662f\u5076\u6570\uff0c\u5219\u88c5\u6c34\u6b21\u6570\u518d+=(a+b-c)//2 \u5426\u5219\u88c5\u6c34\u6b21\u6570\u518d+=(a+b-c)//2+1 \u7efc\u4e0a\u88c5\u6c34\u6b21\u6570=(a+b+c+1))//2</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def fillCups(self, amount: List[int]) -&gt; int:\n        amount.sort()\n        if amount[2] &gt; amount[1] + amount[0]:\n            return amount[2]\n        return (sum(amount) + 1) // 2\n</code></pre>"},{"location":"LeetCode/%E8%84%91%E7%AD%8B%E6%80%A5%E8%BD%AC%E5%BC%AF/#_3","title":"\u5b57\u7b26\u4e32\u8f6e\u8f6c","text":"<p>\u5b57\u7b26\u4e32\u8f6e\u8f6c\u3002\u7ed9\u5b9a\u4e24\u4e2a\u5b57\u7b26\u4e32s1\u548cs2\uff0c\u8bf7\u7f16\u5199\u4ee3\u7801\u68c0\u67e5s2\u662f\u5426\u4e3as1\u65cb\u8f6c\u800c\u6210\uff08\u6bd4\u5982\uff0cwaterbottle\u662ferbottlewat\u65cb\u8f6c\u540e\u7684\u5b57\u7b26\u4e32\uff09\u3002</p> <p>\u793a\u4f8b1:</p> <pre><code>\u8f93\u5165\uff1as1 = \"waterbottle\", s2 = \"erbottlewat\"\n\u8f93\u51fa\uff1aTrue\n</code></pre> <p>\u793a\u4f8b2:</p> <pre><code>\u8f93\u5165\uff1as1 = \"aa\", s2 = \"aba\"\n\u8f93\u51fa\uff1aFalse\n</code></pre> <p>\u63d0\u793a\uff1a \u5b57\u7b26\u4e32\u957f\u5ea6\u5728[0, 100000]\u8303\u56f4\u5185\u3002</p> \u601d\u8def <p>TODO</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def isFlipedString(self, s1: str, s2: str) -&gt; bool:\n        return len(s1) == len(s2) and s2 in s1 + s1\n</code></pre>"},{"location":"LeetCode/%E8%84%91%E7%AD%8B%E6%80%A5%E8%BD%AC%E5%BC%AF/#_4","title":"\u4e24\u5730\u8c03\u5ea6","text":"<p>\u516c\u53f8\u8ba1\u5212\u9762\u8bd5 2n \u4eba\u3002\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 costs \uff0c\u5176\u4e2d costs[i] = [aCosti, bCosti] \u3002\u7b2c i \u4eba\u98de\u5f80 a \u5e02\u7684\u8d39\u7528\u4e3a aCosti \uff0c\u98de\u5f80 b \u5e02\u7684\u8d39\u7528\u4e3a bCosti \u3002</p> <p>\u8fd4\u56de\u5c06\u6bcf\u4e2a\u4eba\u90fd\u98de\u5230 a \u3001b \u4e2d\u67d0\u5ea7\u57ce\u5e02\u7684\u6700\u4f4e\u8d39\u7528\uff0c\u8981\u6c42\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709 n \u4eba\u62b5\u8fbe\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1acosts = [[10,20],[30,200],[400,50],[30,20]]\n\u8f93\u51fa\uff1a110\n\u89e3\u91ca\uff1a\n\u7b2c\u4e00\u4e2a\u4eba\u53bb a \u5e02\uff0c\u8d39\u7528\u4e3a 10\u3002\n\u7b2c\u4e8c\u4e2a\u4eba\u53bb a \u5e02\uff0c\u8d39\u7528\u4e3a 30\u3002\n\u7b2c\u4e09\u4e2a\u4eba\u53bb b \u5e02\uff0c\u8d39\u7528\u4e3a 50\u3002\n\u7b2c\u56db\u4e2a\u4eba\u53bb b \u5e02\uff0c\u8d39\u7528\u4e3a 20\u3002\n\n\u6700\u4f4e\u603b\u8d39\u7528\u4e3a 10 + 30 + 50 + 20 = 110\uff0c\u6bcf\u4e2a\u57ce\u5e02\u90fd\u6709\u4e00\u534a\u7684\u4eba\u5728\u9762\u8bd5\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1acosts = [[259,770],[448,54],[926,667],[184,139],[840,118],[577,469]]\n\u8f93\u51fa\uff1a1859\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1acosts = [[515,563],[451,713],[537,709],[343,819],[855,779],[457,60],[650,359],[631,42]]\n\u8f93\u51fa\uff1a3086\n</code></pre> <p>\u63d0\u793a\uff1a 2 * n == costs.length 2 &lt;= costs.length &lt;= 100 costs.length \u4e3a\u5076\u6570 1 &lt;= aCosti, bCosti &lt;= 1000</p> \u601d\u8def <p>\u6392\u5e8f</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>TODO\n</code></pre>"},{"location":"LeetCode/%E8%B4%AA%E5%BF%83/","title":"\u8d2a\u5fc3","text":""},{"location":"LeetCode/%E8%B4%AA%E5%BF%83/#_2","title":"\u9012\u51cf\u5143\u7d20\u4f7f\u6570\u7ec4\u5448\u952f\u9f7f\u72b6","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 <code>nums</code>\uff0c\u6bcf\u6b21 \u64cd\u4f5c \u4f1a\u4ece\u4e2d\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u5e76  \u5c06\u8be5\u5143\u7d20\u7684\u503c\u51cf\u5c11 1 \u3002</p> <p>\u5982\u679c\u7b26\u5408\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00\uff0c\u5219\u6570\u7ec4 <code>A</code> \u5c31\u662f  \u952f\u9f7f\u6570\u7ec4 \uff1a</p> <ul> <li>\u6bcf\u4e2a\u5076\u6570\u7d22\u5f15\u5bf9\u5e94\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5373 <code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code></li> <li>\u6216\u8005\uff0c\u6bcf\u4e2a\u5947\u6570\u7d22\u5f15\u5bf9\u5e94\u7684\u5143\u7d20\u90fd\u5927\u4e8e\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u5373 <code>A[0] &lt; A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; ...</code></li> </ul> <p>\u8fd4\u56de\u5c06\u6570\u7ec4 <code>nums</code> \u8f6c\u6362\u4e3a\u952f\u9f7f\u6570\u7ec4\u6240\u9700\u7684\u6700\u5c0f\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a </p> <pre><code>\u8f93\u5165\uff1anums = [1,2,3]  \n\u8f93\u51fa\uff1a2  \n\u89e3\u91ca\uff1a\u6211\u4eec\u53ef\u4ee5\u628a 2 \u9012\u51cf\u5230 0\uff0c\u6216\u628a 3 \u9012\u51cf\u5230 1\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a </p> <pre><code>\u8f93\u5165\uff1anums = [9,6,1,6,2]  \n\u8f93\u51fa\uff1a4\n</code></pre> <p>\u63d0\u793a\uff1a <code>1 &lt;= nums.length &lt;= 1000</code> <code>1 &lt;= nums[i] &lt;= 1000</code></p> \u601d\u8def <ol> <li>\u53ea\u6709\u51cf\u5c11\u64cd\u4f5c\u610f\u5473\u7740\u4ec0\u4e48\uff1f \u5982\u679c\u4f60\u60f3\u628a\\(x&lt;=y\\)  \u6539\u6210 \\(x&gt;y\\) \u7684\u8bdd\uff0c\u51cf\u5c11 \\(x\\) \u662f\u6beb\u65e0\u610f\u4e49\u7684\uff0c\u53ea\u80fd\u51cf\u5c11 \\(y\\)\u3002</li> <li>\u4ee5\u7b2c\u4e00\u79cd\u4e3a\u4f8b\uff0c\u8981\u60f3\u8f6c\u6362\u6210 <code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code>\uff0c\u6839\u636e\u63d0\u793a 1\uff0c\u54ea\u4e9b\u6570\u4e00\u5b9a\u4e0d\u9700\u8981\u51cf\u5c11\uff1f \u5076\u6570\u4f4d nums[0],nums[2],\u22ef \u662f\u4e00\u5b9a\u4e0d\u9700\u8981\u7684\u3002</li> <li>\u5206\u7c7b\u8ba8\u8bba\u4e24\u7c7b\u952f\u9f7f\u6570\u7ec4</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def movesToMakeZigzag(self, nums: List[int]) -&gt; int:\n        inf=0xffffffff\n        res1=res2=0\n        for i in range(len(nums)):\n            if i%2==0:\n                t=nums[i]-min(nums[i-1] if i-1&gt;=0 else inf,nums[i+1] if i+1&lt;len(nums) else inf)+1\n                if t&gt;0:\n                    res1+=t\n            else:\n                t=nums[i]-min(nums[i-1] if i-1&gt;=0 else inf,nums[i+1] if i+1&lt;len(nums) else inf)+1\n                if t&gt;0:\n                    res2+=t\n        return min(res1,res2)\n</code></pre>"},{"location":"LeetCode/%E8%B4%AA%E5%BF%83/#_3","title":"\u7f51\u7edc\u5ef6\u8fdf\u65f6\u95f4","text":"<p>\u6709 n \u4e2a\u7f51\u7edc\u8282\u70b9\uff0c\u6807\u8bb0\u4e3a 1 \u5230 n\u3002</p> <p>\u7ed9\u4f60\u4e00\u4e2a\u5217\u8868 times\uff0c\u8868\u793a\u4fe1\u53f7\u7ecf\u8fc7 \u6709\u5411 \u8fb9\u7684\u4f20\u9012\u65f6\u95f4\u3002 times[i] = (ui, vi, wi)\uff0c\u5176\u4e2d ui \u662f\u6e90\u8282\u70b9\uff0cvi \u662f\u76ee\u6807\u8282\u70b9\uff0c wi \u662f\u4e00\u4e2a\u4fe1\u53f7\u4ece\u6e90\u8282\u70b9\u4f20\u9012\u5230\u76ee\u6807\u8282\u70b9\u7684\u65f6\u95f4\u3002</p> <p>\u73b0\u5728\uff0c\u4ece\u67d0\u4e2a\u8282\u70b9 K \u53d1\u51fa\u4e00\u4e2a\u4fe1\u53f7\u3002\u9700\u8981\u591a\u4e45\u624d\u80fd\u4f7f\u6240\u6709\u8282\u70b9\u90fd\u6536\u5230\u4fe1\u53f7\uff1f\u5982\u679c\u4e0d\u80fd\u4f7f\u6240\u6709\u8282\u70b9\u6536\u5230\u4fe1\u53f7\uff0c\u8fd4\u56de -1 \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <p></p> <pre><code>\u8f93\u5165\uff1atimes = [[2,1,1],[2,3,1],[3,4,1]], n = 4, k = 2\n\u8f93\u51fa\uff1a2\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1atimes = [[1,2,1]], n = 2, k = 1\n\u8f93\u51fa\uff1a1\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1atimes = [[1,2,1]], n = 2, k = 2\n\u8f93\u51fa\uff1a-1\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= k &lt;= n &lt;= 100 1 &lt;= times.length &lt;= 6000 times[i].length == 3 1 &lt;= ui, vi &lt;= n ui != vi 0 &lt;= wi &lt;= 100 \u6240\u6709 (ui, vi) \u5bf9\u90fd \u4e92\u4e0d\u76f8\u540c\uff08\u5373\uff0c\u4e0d\u542b\u91cd\u590d\u8fb9\uff09  </p> \u601d\u8def <p>Dijkstra \u7b97\u6cd5 </p> <p>\u628a\u6240\u6709\u7ed3\u70b9\u5206\u6210\u4e24\u7c7b\uff1a</p> <ol> <li>\u5df2\u786e\u5b9a\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u7ed3\u70b9</li> <li>\u672a\u786e\u5b9a\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7684\u7ed3\u70b9</li> </ol> <p>\u6bcf\u6b21\u4ece\u7b2c\u4e8c\u7c7b\u7ed3\u70b9\u4e2d\u9009\u53d6\u4e00\u4e2a\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u7ed3\u70b9\uff0c\u7528\u5b83\u6765\u66f4\u65b0\u5176\u4ed6\u7b2c\u4e8c\u7c7b\u7ed3\u70b9\u7684\u8ddd\u79bb\uff0c\u7136\u540e\u628a\u5b83\u6dfb\u52a0\u5230\u7b2c\u4e00\u7c7b\u7ed3\u70b9\u4e2d\uff0c\u76f4\u5230\u7b2c\u4e8c\u7c7b\u7ed3\u70b9\u4e3a\u7a7a\u3002</p> \u793a\u4f8b\u4ee3\u7801 <ol> <li> <p>\u65b9\u6cd5\u4e00\uff1a\u9002\u7528\u4e8e\u7a20\u5bc6\u56fe <pre><code>class Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -&gt; int:\n        map=[[] for _ in range(n+1)]\n        for i,j,v in times:\n            map[i].append([j,v])\n\n        minDist=[0xffffffff]*(n+1)\n        minDist[k]=0\n        visit=set() # \u7b2c\u4e00\u7c7b\u7ed3\u70b9\n        while len(visit)!=n:\n            x = -1\n            # \u5bfb\u627e\u4e00\u4e2a\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u7b2c\u4e8c\u7c7b\u7ed3\u70b9\n            for i in range(1,n+1):\n                if i not in visit:\n                    if x == -1 or minDist[i]&lt;minDist[x]:\n                        x = i\n            # \u6dfb\u52a0\u4e3a\u7b2c\u4e00\u7c7b\u7ed3\u70b9\n            visit.add(x)\n            # \u66f4\u65b0\u5176\u4ed6\u76f8\u8fde\u63a5\u7684\u7b2c\u4e8c\u7c7b\u7ed3\u70b9\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\n            for i,j in map[x]:\n                minDist[i]=min(minDist[i],minDist[x]+j)\n        res=max(minDist[1:])\n        return res if res!=0xffffffff else -1\n</code></pre></p> </li> <li> <p>\u65b9\u6cd5\u4e8c\uff08\u5806\u4f18\u5316\uff09\uff1a\u9002\u7528\u4e8e\u7a00\u758f\u56fe <pre><code>class Solution:\n    def networkDelayTime(self, times: List[List[int]], n: int, k: int) -&gt; int:\n        map=[[] for _ in range(n+1)]\n        for i,j,v in times:\n            map[i].append([j,v])\n        minDist=[0xffffffff]*(n+1)\n        minDist[k]=0\n        visit=set() # \u7b2c\u4e00\u7c7b\u7ed3\u70b9\n        heap=[[0,k]]\n        while heap:\n            # \u9009\u53d6\u4e00\u4e2a\u79bb\u8d77\u70b9\u6700\u8fd1\u7684\u7ed3\u70b9\n\n            # \u9700\u8981\u7406\u89e3\u8fd9\u4e00\u6b65\uff08\u6bd4\u5982\u6709\u4e00\u4e2a\u7ed3\u70b9i\u88ab\u91cd\u590d\u52a0\u5165\u5806\uff0c\u4f46\u662f\u8ddd\u79bb\u4e0d\u4e00\u6837\uff0c\u8fd9\u91cc\u5254\u9664\u6389\u8ddd\u79bb\u4e0d\u4e3a\u6700\u77ed\u7684\u9879\uff09 t_dist,x=heapq.heappop(heap)\n            if t_dist&gt;minDist[x]: \n                continue\n            # \u6dfb\u52a0\u4e3a\u7b2c\u4e00\u7c7b\u7ed3\u70b9\n            visit.add(x)\n            # \u66f4\u65b0\u5176\u4ed6\u76f8\u8fde\u63a5\u7684\u7b2c\u4e8c\u7c7b\u7ed3\u70b9\u7ed3\u70b9\u7684\u6700\u77ed\u8def\u5f84\n            for i,j in map[x]:\n                if minDist[i]&gt;minDist[x]+j:\n                    minDist[i]=minDist[x]+j\n                    heapq.heappush(heap,[minDist[i],i])\n        res=max(minDist[1:])\n        return res if res!=0xffffffff else -1\n</code></pre></p> </li> </ol>"},{"location":"LeetCode/%E8%B4%AA%E5%BF%83/#_4","title":"\u4f7f\u7528\u673a\u5668\u4eba\u6253\u5370\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\u00a0s\u00a0\u548c\u4e00\u4e2a\u673a\u5668\u4eba\uff0c\u673a\u5668\u4eba\u5f53\u524d\u6709\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u00a0t\u00a0\u3002\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\u4e4b\u4e00\uff0c\u76f4\u5230\u00a0s \u548c\u00a0t\u00a0\u90fd\u53d8\u6210\u7a7a\u5b57\u7b26\u4e32\uff1a</p> <ul> <li>\u5220\u9664\u5b57\u7b26\u4e32\u00a0s\u00a0\u7684 \u7b2c\u4e00\u4e2a\u00a0\u5b57\u7b26\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u7ed9\u673a\u5668\u4eba\u3002\u673a\u5668\u4eba\u628a\u8fd9\u4e2a\u5b57\u7b26\u6dfb\u52a0\u5230 t\u00a0\u7684\u5c3e\u90e8\u3002</li> <li>\u5220\u9664\u5b57\u7b26\u4e32\u00a0t\u00a0\u7684\u00a0\u6700\u540e\u4e00\u4e2a\u00a0\u5b57\u7b26\uff0c\u5e76\u5c06\u8be5\u5b57\u7b26\u7ed9\u673a\u5668\u4eba\u3002\u673a\u5668\u4eba\u5c06\u8be5\u5b57\u7b26\u5199\u5230\u7eb8\u4e0a\u3002</li> </ul> <p>\u8bf7\u4f60\u8fd4\u56de\u7eb8\u4e0a\u80fd\u5199\u51fa\u7684\u5b57\u5178\u5e8f\u6700\u5c0f\u7684\u5b57\u7b26\u4e32\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"zza\"\n\u8f93\u51fa\uff1a\"azz\"\n\u89e3\u91ca\uff1a\u7528 p \u8868\u793a\u5199\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u3002\n\u4e00\u5f00\u59cb\uff0cp=\"\" \uff0cs=\"zza\" \uff0ct=\"\" \u3002\n\u6267\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e09\u6b21\uff0c\u5f97\u5230 p=\"\" \uff0cs=\"\" \uff0ct=\"zza\" \u3002\n\u6267\u884c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4e09\u6b21\uff0c\u5f97\u5230 p=\"azz\" \uff0cs=\"\" \uff0ct=\"\" \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"bac\"\n\u8f93\u51fa\uff1a\"abc\"\n\u89e3\u91ca\uff1a\u7528 p \u8868\u793a\u5199\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u3002\n\u6267\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u4e24\u6b21\uff0c\u5f97\u5230 p=\"\" \uff0cs=\"c\" \uff0ct=\"ba\" \u3002\n\u6267\u884c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u4e24\u6b21\uff0c\u5f97\u5230 p=\"ab\" \uff0cs=\"c\" \uff0ct=\"\" \u3002\n\u6267\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5f97\u5230 p=\"ab\" \uff0cs=\"\" \uff0ct=\"c\" \u3002\n\u6267\u884c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\uff0c\u5f97\u5230 p=\"abc\" \uff0cs=\"\" \uff0ct=\"\" \u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1as = \"bdda\"\n\u8f93\u51fa\uff1a\"addb\"\n\u89e3\u91ca\uff1a\u7528 p \u8868\u793a\u5199\u51fa\u6765\u7684\u5b57\u7b26\u4e32\u3002\n\u4e00\u5f00\u59cb\uff0cp=\"\" \uff0cs=\"bdda\" \uff0ct=\"\" \u3002\n\u6267\u884c\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u56db\u6b21\uff0c\u5f97\u5230 p=\"\" \uff0cs=\"\" \uff0ct=\"bdda\" \u3002\n\u6267\u884c\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u56db\u6b21\uff0c\u5f97\u5230 p=\"addb\" \uff0cs=\"\" \uff0ct=\"\" \u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= s.length &lt;= 105 s\u00a0\u53ea\u5305\u542b\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u3002</p> \u601d\u8def <ol> <li>\u51fa\u73b0\u95ee\u9898\uff1a\u601d\u8def\u95ee\u9898</li> <li>\u672c\u9898\u5b9e\u9645\u4e0a\u662f\u8003\u5bdf\u5b57\u7b26\u7684\u51fa\u6808\u65f6\u673a</li> </ol> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def robotWithString(self, s: str) -&gt; str:\n        x=0\n        bucket=[0]*26 # \u5b57\u5178\u5e8f \u67d0\u4e2a\u5b57\u7b26\u540e\u7684\n        for i in range(len(s)):\n            bucket[ord(s[i])-ord('a')]+=1\n        stack=deque()\n\n        res=''\n        i=0\n        while i&lt;len(s):\n            while not bucket[x]:\n                x+=1\n\n            if stack and stack[-1]&lt;=chr(ord('a')+x): # \u5982\u679c\u6808\u9876\u7684\u5b57\u7b26&lt;=\u540e\u9762\u6240\u6709\u5b57\u7b26\u7684\u5b57\u5178\u5e8f\n                res+=stack.pop()\n            else:# \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5b57\u7b26\u90fd\u9700\u8981\u5148\u5165\u6808\n                stack.append(s[i])\n                bucket[ord(s[i])-ord('a')]-=1\n                i+=1\n\n        while stack:\n            rear=stack.pop()\n            res+=rear\n        return res\n</code></pre>"},{"location":"LeetCode/%E9%9A%8F%E6%9C%BA%E9%87%87%E6%A0%B7/","title":"\u968f\u673a\u91c7\u6837","text":""},{"location":"LeetCode/%E9%9A%8F%E6%9C%BA%E9%87%87%E6%A0%B7/#_2","title":"\u94fe\u8868\u968f\u673a\u8282\u70b9","text":"<p>\u7ed9\u4f60\u4e00\u4e2a\u5355\u94fe\u8868\uff0c\u968f\u673a\u9009\u62e9\u94fe\u8868\u7684\u4e00\u4e2a\u8282\u70b9\uff0c\u5e76\u8fd4\u56de\u76f8\u5e94\u7684\u8282\u70b9\u503c\u3002\u6bcf\u4e2a\u8282\u70b9 \u88ab\u9009\u4e2d\u7684\u6982\u7387\u4e00\u6837 \u3002</p> <p>\u5b9e\u73b0 Solution \u7c7b\uff1a</p> <ul> <li>Solution(ListNode head) \u4f7f\u7528\u6574\u6570\u6570\u7ec4\u521d\u59cb\u5316\u5bf9\u8c61\u3002</li> <li>int getRandom() \u4ece\u94fe\u8868\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u8282\u70b9\u5e76\u8fd4\u56de\u8be5\u8282\u70b9\u7684\u503c\u3002\u94fe\u8868\u4e2d\u6240\u6709\u8282\u70b9\u88ab\u9009\u4e2d\u7684\u6982\u7387\u76f8\u7b49\u3002</li> </ul> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165:\n[\"Solution\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\", \"getRandom\"]\n[[[1, 2, 3]], [], [], [], [], []]\n\u8f93\u51fa:\n[null, 1, 3, 2, 2, 3]\n\u89e3\u91ca:\nSolution solution = new Solution([1, 2, 3]);\nsolution.getRandom(); // \u8fd4\u56de 1\nsolution.getRandom(); // \u8fd4\u56de 3\nsolution.getRandom(); // \u8fd4\u56de 2\nsolution.getRandom(); // \u8fd4\u56de 2\nsolution.getRandom(); // \u8fd4\u56de 3\n// getRandom() \u65b9\u6cd5\u5e94\u968f\u673a\u8fd4\u56de 1\u30012\u30013\u4e2d\u7684\u4e00\u4e2a\uff0c\u6bcf\u4e2a\u5143\u7d20\u88ab\u8fd4\u56de\u7684\u6982\u7387\u76f8\u7b49\u3002\n</code></pre> <p>\u63d0\u793a\uff1a \u94fe\u8868\u4e2d\u7684\u8282\u70b9\u6570\u5728\u8303\u56f4 [1, 104] \u5185 -104 &lt;= Node.val &lt;= 104 \u81f3\u591a\u8c03\u7528 getRandom \u65b9\u6cd5 104 \u6b21</p> \u601d\u8def <p>\u84c4\u6c34\u6c60\u62bd\u6837\u7b97\u6cd5</p> <p>\u5f53\u5185\u5b58\u65e0\u6cd5\u52a0\u8f7d\u5168\u90e8\u6570\u636e\u65f6\uff0c\u5982\u4f55\u4ece\u5305\u542b\u672a\u77e5\u5927\u5c0f\u7684\u6570\u636e\u6d41\u4e2d\u968f\u673a\u9009\u53d6k\u4e2a\u6570\u636e\uff0c\u5e76\u4e14\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u6570\u636e\u88ab\u62bd\u53d6\u5230\u7684\u6982\u7387\u76f8\u7b49\u3002</p> <p>\u5f53 k = 1 \u65f6\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u6bcf\u6b21\u53ea\u80fd\u8bfb\u4e00\u4e2a\u6570\u636e\u3002</p> <p>\u5047\u8bbe\u6570\u636e\u6d41\u542b\u6709N\u4e2a\u6570\uff0c\u6211\u4eec\u77e5\u9053\u5982\u679c\u8981\u4fdd\u8bc1\u6240\u6709\u7684\u6570\u88ab\u62bd\u5230\u7684\u6982\u7387\u76f8\u7b49\uff0c\u90a3\u4e48\u6bcf\u4e2a\u6570\u62bd\u5230\u7684\u6982\u7387\u5e94\u8be5\u4e3a 1/N</p> <p>\u90a3\u5982\u4f55\u4fdd\u8bc1\u5462\uff1f</p> <p>\u5148\u8bf4\u65b9\u6848\uff1a</p> <p>\u6bcf\u6b21\u53ea\u4fdd\u7559\u4e00\u4e2a\u6570\uff0c\u5f53\u9047\u5230\u7b2c i \u4e2a\u6570\u65f6\uff0c\u4ee5 1/i\u7684\u6982\u7387\u4fdd\u7559\u5b83\uff0c(i-1)/i\u7684\u6982\u7387\u4fdd\u7559\u539f\u6765\u7684\u6570\u3002</p> <p>\u4e3e\u4f8b\u8bf4\u660e\uff1a 1 - 10</p> <ul> <li>\u9047\u52301\uff0c\u6982\u7387\u4e3a1\uff0c\u4fdd\u7559\u7b2c\u4e00\u4e2a\u6570\u3002</li> <li>\u9047\u52302\uff0c\u6982\u7387\u4e3a1/2\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c1\u548c2\u54041/2\u7684\u6982\u7387\u88ab\u4fdd\u7559</li> <li>\u9047\u52303\uff0c3\u88ab\u4fdd\u7559\u7684\u6982\u7387\u4e3a1/3\uff0c(\u4e4b\u524d\u5269\u4e0b\u7684\u6570\u5047\u8bbe1\u88ab\u4fdd\u7559)\uff0c2/3\u7684\u6982\u7387 1 \u88ab\u4fdd\u7559\uff0c(\u6b64\u65f61\u88ab\u4fdd\u7559\u7684\u603b\u6982\u7387\u4e3a 2/3 * 1/2 = 1/3)</li> <li>\u9047\u52304\uff0c4\u88ab\u4fdd\u7559\u7684\u6982\u7387\u4e3a1/4\uff0c(\u4e4b\u524d\u5269\u4e0b\u7684\u6570\u5047\u8bbe1\u88ab\u4fdd\u7559)\uff0c3/4\u7684\u6982\u7387 1 \u88ab\u4fdd\u7559\uff0c(\u6b64\u65f61\u88ab\u4fdd\u7559\u7684\u603b\u6982\u7387\u4e3a 3/4 * 2/3 * 1/2 = 1/4)</li> </ul> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u6bcf\u4e2a\u6570\u88ab\u4fdd\u7559\u7684\u6982\u7387\u90fd\u662f1/N\u3002</p> <p>\u8bc1\u660e\u4f7f\u7528\u6570\u5b66\u5f52\u7eb3\u6cd5\u5373\u53ef</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n\n    def __init__(self, head: Optional[ListNode]):\n        self.head=head\n\n    def getRandom(self) -&gt; int:\n        cnt=1\n        res=-1\n        head=self.head\n        while head:\n            if randrange(0,cnt)==0:\n                res=head.val\n            cnt+=1\n            head=head.next\n        return res\n</code></pre>"},{"location":"LeetCode/dp/","title":"\u52a8\u6001\u89c4\u5212","text":"<p>\u52a8\u6001\u89c4\u5212\u4e8b\u5b9e\u4e0a\u662f\u5bf9\u66b4\u529b\u89e3\u6cd5\u505a\u4e86\u4f18\u5316\u3002  </p> <p>\u4ee5\u722c\u697c\u68af\u4e3a\u4f8b\uff0c\u52a8\u6001\u89c4\u5212\u6bd4\u66b4\u529b\u5feb\u7684\u539f\u56e0\u662f\uff1a\u52a8\u6001\u89c4\u5212\u4e0d\u7528\u91cd\u590d\u8ba1\u7b97\u5b50\u72b6\u6001\uff08\u4ece\u7b2ci\u9636\u697c\u68af\u5230\u697c\u9876\u7684\u722c\u6cd5\uff09</p> <p>\u6ce8\uff1a\u4e3a\u4e86\u7f16\u7801\u65b9\u4fbf\u4ee5\u53ca\u4fbf\u4ee5\u7406\u89e3\uff0c\u4e0b\u9762\u7684\u52a8\u6001\u89c4\u5212\u76f8\u5173\u9898\u76ee\u90fd\u4f7f\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u5b9e\u73b0</p> <p>\u8bb0\u5fc6\u5316\u641c\u7d22\u4e0e\u52a8\u6001\u89c4\u5212\u7684\u533a\u522b\u5728\u4e8e 1. \u51fd\u6570\u5165\u53c2\u5373\u662f\u5b50\u72b6\u6001\uff08\u6ca1\u6709dp\u6570\u7ec4\uff09 2. \u51fd\u6570\u7684\u8c03\u7528\u8574\u542b\u8fd9\u5b50\u72b6\u6001\u76f4\u63a5\u7684\u5173\u7cfb 3. \u8bb0\u5fc6\u5316\u641c\u7d22\u5728\u7a7a\u95f4\u590d\u6742\u5ea6\u4e0a\u591a\u4e86\u51fd\u6570\u8c03\u7528\u7684\u6808\u5f00\u9500  </p>"},{"location":"LeetCode/dp/dp/","title":"\u52a8\u6001\u89c4\u5212\u57fa\u7840","text":""},{"location":"LeetCode/dp/dp/#_2","title":"\u6700\u957f\u91cd\u590d\u5b50\u6570\u7ec4","text":"<p>\u7ed9\u4e24\u4e2a\u6574\u6570\u6570\u7ec4 nums1 \u548c nums2 \uff0c\u8fd4\u56de \u4e24\u4e2a\u6570\u7ec4\u4e2d \u516c\u5171\u7684 \u3001\u957f\u5ea6\u6700\u957f\u7684\u5b50\u6570\u7ec4\u7684\u957f\u5ea6 \u3002</p> <p>\u793a\u4f8b 1\uff1a     \u8f93\u5165\uff1anums1 = [1,2,3,2,1], nums2 = [3,2,1,4,7]     \u8f93\u51fa\uff1a3     \u89e3\u91ca\uff1a\u957f\u5ea6\u6700\u957f\u7684\u516c\u5171\u5b50\u6570\u7ec4\u662f [3,2,1] \u3002</p> <p>\u793a\u4f8b 2\uff1a     \u8f93\u5165\uff1anums1 = [0,0,0,0,0], nums2 = [0,0,0,0,0]     \u8f93\u51fa\uff1a5</p> <p>\u63d0\u793a\uff1a 1 &lt;= nums1.length, nums2.length &lt;= 1000 0 &lt;= nums1[i], nums2[i] &lt;= 100</p> \u601d\u8def <p>TODO    </p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\ndef findLength(self, nums1: List[int], nums2: List[int]) -&gt; int:\n    dp=[[0 for _ in nums2] for _ in nums1]\n    res=0\n    for i in range(len(nums2)):\n        if nums1[0]==nums2[i]:\n            dp[0][i]=1\n            res=max(res,dp[0][i])\n    for i in range(len(nums1)):\n        if nums1[i]==nums2[0]:\n            dp[i][0]=1\n            res=max(res,dp[i][0])\n\n    for i in range(1,len(nums1)):\n        for j in range(1,len(nums2)):\n            if nums1[i]==nums2[j]:\n                dp[i][j]=dp[i-1][j-1]+1\n                res=max(res,dp[i][j])\n\n    return res\n</code></pre>"},{"location":"LeetCode/dp/dp/#_3","title":"\u6700\u77ed\u516c\u5171\u8d85\u5e8f\u5217","text":"<p>\u221a</p> <p>\u7ed9\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u00a0str1 \u548c\u00a0str2\uff0c\u8fd4\u56de\u540c\u65f6\u4ee5\u00a0str1\u00a0\u548c\u00a0str2\u00a0\u4f5c\u4e3a\u5b50\u5e8f\u5217\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002\u5982\u679c\u7b54\u6848\u4e0d\u6b62\u4e00\u4e2a\uff0c\u5219\u53ef\u4ee5\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u4efb\u610f\u4e00\u4e2a\u7b54\u6848\u3002</p> <p>\uff08\u5982\u679c\u4ece\u5b57\u7b26\u4e32 T \u4e2d\u5220\u9664\u4e00\u4e9b\u5b57\u7b26\uff08\u4e5f\u53ef\u80fd\u4e0d\u5220\u9664\uff0c\u5e76\u4e14\u9009\u51fa\u7684\u8fd9\u4e9b\u5b57\u7b26\u53ef\u4ee5\u4f4d\u4e8e T \u4e2d\u7684\u00a0\u4efb\u610f\u4f4d\u7f6e\uff09\uff0c\u53ef\u4ee5\u5f97\u5230\u5b57\u7b26\u4e32 S\uff0c\u90a3\u4e48\u00a0S \u5c31\u662f\u00a0T \u7684\u5b50\u5e8f\u5217\uff09</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>\u8f93\u5165\uff1astr1 = \"abac\", str2 = \"cab\"\n\u8f93\u51fa\uff1a\"cabac\"\n\u89e3\u91ca\uff1a\nstr1 = \"abac\" \u662f \"cabac\" \u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb \"cabac\" \u7684\u7b2c\u4e00\u4e2a \"c\"\u5f97\u5230 \"abac\"\u3002 \nstr2 = \"cab\" \u662f \"cabac\" \u7684\u4e00\u4e2a\u5b50\u4e32\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u4ee5\u5220\u53bb \"cabac\" \u672b\u5c3e\u7684 \"ac\" \u5f97\u5230 \"cab\"\u3002\n\u6700\u7ec8\u6211\u4eec\u7ed9\u51fa\u7684\u7b54\u6848\u662f\u6ee1\u8db3\u4e0a\u8ff0\u5c5e\u6027\u7684\u6700\u77ed\u5b57\u7b26\u4e32\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= str1.length, str2.length &lt;= 1000 str1 \u548c\u00a0str2\u00a0\u90fd\u7531\u5c0f\u5199\u82f1\u6587\u5b57\u6bcd\u7ec4\u6210\u3002</p> \u601d\u8def <p>\u6c42\u6700\u77ed\u516c\u5171\u5b50\u5e8f\u5217    </p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def shortestCommonSupersequence(self, str1: str, str2: str) -&gt; str:\n        @lru_cache(None)\n        def getSCS(i,j):\n            if i==len(str1) or j==len(str2):\n                return \"\"\n            res=\"\"\n            if str1[i]==str2[j]:\n                res=str1[i]+getSCS(i+1,j+1)\n            t1,t2=getSCS(i,j+1),getSCS(i+1,j)\n            if len(res)&lt;len(t1):\n                res=t1\n            if len(res)&lt;len(t2):\n                res=t2\n            return res\n        SCS=getSCS(0,0)\n        i,j,x=0,0,0\n        res=\"\"\n        while i&lt;len(str1) or j&lt;len(str2):\n            if x==len(SCS):\n                res+=str1[i:]+str2[j:]\n                break\n            else:\n                ii,jj=i,j\n                while SCS[x]!=str1[ii]:\n                    ii+=1\n                while SCS[x]!=str2[jj]:\n                    jj+=1\n                res+=str1[i:ii]+str2[j:jj]+SCS[x]\n                i=ii+1\n                j=jj+1\n                x+=1\n        return res\n</code></pre>"},{"location":"LeetCode/dp/dp/#_4","title":"\u65e0\u77db\u76fe\u7684\u6700\u4f73\u7403\u961f","text":"<p>\u221a</p> <p>\u5047\u8bbe\u4f60\u662f\u7403\u961f\u7684\u7ecf\u7406\u3002\u5bf9\u4e8e\u5373\u5c06\u5230\u6765\u7684\u9526\u6807\u8d5b\uff0c\u4f60\u60f3\u7ec4\u5408\u4e00\u652f\u603b\u4f53\u5f97\u5206\u6700\u9ad8\u7684\u7403\u961f\u3002\u7403\u961f\u7684\u5f97\u5206\u662f\u7403\u961f\u4e2d\u6240\u6709\u7403\u5458\u7684\u5206\u6570 \u603b\u548c \u3002</p> <p>\u7136\u800c\uff0c\u7403\u961f\u4e2d\u7684\u77db\u76fe\u4f1a\u9650\u5236\u7403\u5458\u7684\u53d1\u6325\uff0c\u6240\u4ee5\u5fc5\u987b\u9009\u51fa\u4e00\u652f \u6ca1\u6709\u77db\u76fe \u7684\u7403\u961f\u3002\u5982\u679c\u4e00\u540d\u5e74\u9f84\u8f83\u5c0f\u7403\u5458\u7684\u5206\u6570 \u4e25\u683c\u5927\u4e8e \u4e00\u540d\u5e74\u9f84\u8f83\u5927\u7684\u7403\u5458\uff0c\u5219\u5b58\u5728\u77db\u76fe\u3002\u540c\u9f84\u7403\u5458\u4e4b\u95f4\u4e0d\u4f1a\u53d1\u751f\u77db\u76fe\u3002</p> <p>\u7ed9\u4f60\u4e24\u4e2a\u5217\u8868 scores \u548c ages\uff0c\u5176\u4e2d\u6bcf\u7ec4 scores[i] \u548c ages[i] \u8868\u793a\u7b2c i \u540d\u7403\u5458\u7684\u5206\u6570\u548c\u5e74\u9f84\u3002\u8bf7\u4f60\u8fd4\u56de \u6240\u6709\u53ef\u80fd\u7684\u65e0\u77db\u76fe\u7403\u961f\u4e2d\u5f97\u5206\u6700\u9ad8\u90a3\u652f\u7684\u5206\u6570 \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1ascores = [1,3,5,10,15], ages = [1,2,3,4,5]\n\u8f93\u51fa\uff1a34\n\u89e3\u91ca\uff1a\u4f60\u53ef\u4ee5\u9009\u4e2d\u6240\u6709\u7403\u5458\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1ascores = [4,5,6,5], ages = [2,1,2,1]\n\u8f93\u51fa\uff1a16\n\u89e3\u91ca\uff1a\u6700\u4f73\u7684\u9009\u62e9\u662f\u540e 3 \u540d\u7403\u5458\u3002\u6ce8\u610f\uff0c\u4f60\u53ef\u4ee5\u9009\u4e2d\u591a\u4e2a\u540c\u9f84\u7403\u5458\u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1ascores = [1,2,3,5], ages = [8,9,10,1]\n\u8f93\u51fa\uff1a6\n\u89e3\u91ca\uff1a\u6700\u4f73\u7684\u9009\u62e9\u662f\u524d 3 \u540d\u7403\u5458\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= scores.length, ages.length &lt;= 1000 scores.length == ages.length 1 &lt;= scores[i] &lt;= 106 1 &lt;= ages[i] &lt;= 1000  </p> \u601d\u8def <p>\u8fd9\u662f\u4e00\u9053\u9700\u8981\u4f18\u5316\u624d\u4e0d\u4f1a\u8d85\u65f6\u7684\u52a8\u6001\u89c4\u5212\u9898</p> <p>\u5148\u6309\u5e74\u9f84\u548c\u5206\u6570\u6392\u5e8f \u5047\u8bbedp[i][j]\u662f\u4ecei\u5f00\u59cb\u9009\u62e9\uff0c\u4e0a\u4e00\u4e2a\u9009\u62e9\u7684\u662fj\u7684\u6700\u4f73\u65e0\u77db\u76fe\u7403\u5458\u9009\u62e9\uff0c\u5219\uff1a  </p> \\[ dp[i][j]= \\begin{cases}     max(dp[i+1][j],dp[i+1][i]+scores[i]) &amp; , ages[i]=ages[j] \\\\     dp[i+1][j] &amp; , ages[j]&lt;ages[i],scores[j]{\\le}scores[i] \\end{cases} \\] <p>\u5982\u679c\u9009\u4e86i\uff0c\u90a3\u5c31\u8981\u76f4\u63a5\u5411\u53f3\u904d\u5386\u5230\\(ages[j]&lt;ages[i],scores[j]{\\le}scores[i]\\)\u7684\u60c5\u51b5\uff0c\u5728\u505a\u9009\u62e9\uff08\u51cf\u679d\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u4e00\u4e2a\u9009\uff09</p> <p>\u540c\u7c7b\u578b\u9898\uff1a\u6700\u957f\u9012\u589e\u5b50\u5e8f\u5217</p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def bestTeamScore(self, scores: List[int], ages: List[int]) -&gt; int:\n        t=[[0,0]]+list(sorted(zip(ages,scores)))\n        def check(i,j):\n            return t[i][0]==t[j][0] or t[i][1]&lt;=t[j][1]\n\n        @cache\n        def f(i):\n            if i==len(t):\n                return 0\n            res=0\n            for j in range(i+1,len(t)):\n                if check(i,j):\n                    res=max(res,f(j))\n            return res+t[i][1]\n        return f(0)\n</code></pre>"},{"location":"LeetCode/dp/interval/","title":"\u533a\u95f4 DP","text":""},{"location":"LeetCode/dp/interval/#_1","title":"\u6233\u6c14\u7403","text":"<p>\u6709 n \u4e2a\u6c14\u7403\uff0c\u7f16\u53f7\u4e3a0 \u5230 n - 1\uff0c\u6bcf\u4e2a\u6c14\u7403\u4e0a\u90fd\u6807\u6709\u4e00\u4e2a\u6570\u5b57\uff0c\u8fd9\u4e9b\u6570\u5b57\u5b58\u5728\u6570\u7ec4\u00a0nums\u00a0\u4e2d\u3002</p> <p>\u73b0\u5728\u8981\u6c42\u4f60\u6233\u7834\u6240\u6709\u7684\u6c14\u7403\u3002\u6233\u7834\u7b2c i \u4e2a\u6c14\u7403\uff0c\u4f60\u53ef\u4ee5\u83b7\u5f97\u00a0nums[i - 1] * nums[i] * nums[i + 1] \u679a\u786c\u5e01\u3002\u00a0\u8fd9\u91cc\u7684 i - 1 \u548c i + 1 \u4ee3\u8868\u548c\u00a0i\u00a0\u76f8\u90bb\u7684\u4e24\u4e2a\u6c14\u7403\u7684\u5e8f\u53f7\u3002\u5982\u679c i - 1\u6216 i + 1 \u8d85\u51fa\u4e86\u6570\u7ec4\u7684\u8fb9\u754c\uff0c\u90a3\u4e48\u5c31\u5f53\u5b83\u662f\u4e00\u4e2a\u6570\u5b57\u4e3a 1 \u7684\u6c14\u7403\u3002</p> <p>\u6c42\u6240\u80fd\u83b7\u5f97\u786c\u5e01\u7684\u6700\u5927\u6570\u91cf\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [3,1,5,8]\n\u8f93\u51fa\uff1a167\n\u89e3\u91ca\uff1a\nnums = [3,1,5,8] --&gt; [3,5,8] --&gt; [3,8] --&gt; [8] --&gt; []\ncoins =  3*1*5    +   3*5*8   +  1*3*8  + 1*8*1 = 167\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1anums = [1,5]\n\u8f93\u51fa\uff1a10\n</code></pre> <p>\u63d0\u793a\uff1a n == nums.length 1 &lt;= n &lt;= 300 0 &lt;= nums[i] &lt;= 100</p> \u601d\u8def <p>\u8fd9\u9898\u96be\u70b9\u5728\u4e8e\u5148\u9009\u6c14\u7403\u4f1a\u5f71\u54cd\u540e\u9762\u7684\u76f8\u90bb\u5173\u7cfb\uff0c\u5bfc\u81f4dp\u8d70\u4e0d\u4e0b\u53bb</p> <p>\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\u7684\u65b9\u6cd5\u9006\u5411\u601d\u7ef4\uff0c\u679a\u4e3e\u540e\u9009\u6c14\u7403\u7684\u60c5\u51b5\u3002 \u5047\u5982\u6709\u5b50\u72b6\u6001\u533a\u95f4[i,j]\uff0c\u4e3a\u907f\u514d\u5f71\u54cd\u540e\u9762\u7684\u76f8\u90bb\u5173\u7cfb\u3002\u6211\u4eec\u5728\u672c\u72b6\u6001\u4e2d\u4e0d\u9009\u62e9\u8fb9\u754c\u3002 \u5047\u8bbex\uff08i&lt;x&lt;j\uff09\u662f\u6700\u540e\u4e00\u4e2a\u88ab\u6233\u7684\uff0c\u5219\u6709\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b  </p> \\[ dp[i,j]=max(dp[i,x]+dp[x,j]+nums[k-1]*nums[k]*nums[k+1]) \\] \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def maxCoins(self, nums: List[int]) -&gt; int:\n        nums=[1]+nums+[1]\n        @lru_cache(None)\n        def f(i,j):\n            res=0\n            for k in range(i+1,j):\n                res=max(res,f(i,k)+nums[i]*nums[k]*nums[j]+f(k,j))\n            return res\n\n        return f(0,len(nums)-1)\n</code></pre>"},{"location":"LeetCode/dp/interval/#_2","title":"\u5408\u5e76\u77f3\u5934\u7684\u6700\u4f4e\u6210\u672c","text":"<p>\u6709 N \u5806\u77f3\u5934\u6392\u6210\u4e00\u6392\uff0c\u7b2c i \u5806\u4e2d\u6709\u00a0stones[i]\u00a0\u5757\u77f3\u5934\u3002</p> <p>\u6bcf\u6b21\u79fb\u52a8\uff08move\uff09\u9700\u8981\u5c06\u8fde\u7eed\u7684\u00a0K\u00a0\u5806\u77f3\u5934\u5408\u5e76\u4e3a\u4e00\u5806\uff0c\u800c\u8fd9\u4e2a\u79fb\u52a8\u7684\u6210\u672c\u4e3a\u8fd9\u00a0K\u00a0\u5806\u77f3\u5934\u7684\u603b\u6570\u3002</p> <p>\u627e\u51fa\u628a\u6240\u6709\u77f3\u5934\u5408\u5e76\u6210\u4e00\u5806\u7684\u6700\u4f4e\u6210\u672c\u3002\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u8fd4\u56de -1 \u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1astones = [3,2,4,1], K = 2\n\u8f93\u51fa\uff1a20\n\u89e3\u91ca\uff1a\n\u4ece [3, 2, 4, 1] \u5f00\u59cb\u3002\n\u5408\u5e76 [3, 2]\uff0c\u6210\u672c\u4e3a 5\uff0c\u5269\u4e0b [5, 4, 1]\u3002\n\u5408\u5e76 [4, 1]\uff0c\u6210\u672c\u4e3a 5\uff0c\u5269\u4e0b [5, 5]\u3002\n\u5408\u5e76 [5, 5]\uff0c\u6210\u672c\u4e3a 10\uff0c\u5269\u4e0b [10]\u3002\n\u603b\u6210\u672c 20\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u6700\u5c0f\u503c\u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1astones = [3,2,4,1], K = 3\n\u8f93\u51fa\uff1a-1\n\u89e3\u91ca\uff1a\u4efb\u4f55\u5408\u5e76\u64cd\u4f5c\u540e\uff0c\u90fd\u4f1a\u5269\u4e0b 2 \u5806\uff0c\u6211\u4eec\u65e0\u6cd5\u518d\u8fdb\u884c\u5408\u5e76\u3002\u6240\u4ee5\u8fd9\u9879\u4efb\u52a1\u662f\u4e0d\u53ef\u80fd\u5b8c\u6210\u7684\u3002.\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1astones = [3,5,1,2,6], K = 3\n\u8f93\u51fa\uff1a25\n\u89e3\u91ca\uff1a\n\u4ece [3, 5, 1, 2, 6] \u5f00\u59cb\u3002\n\u5408\u5e76 [5, 1, 2]\uff0c\u6210\u672c\u4e3a 8\uff0c\u5269\u4e0b [3, 8, 6]\u3002\n\u5408\u5e76 [3, 8, 6]\uff0c\u6210\u672c\u4e3a 17\uff0c\u5269\u4e0b [17]\u3002\n\u603b\u6210\u672c 25\uff0c\u8fd9\u662f\u53ef\u80fd\u7684\u6700\u5c0f\u503c\u3002\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= stones.length &lt;= 30 2 &lt;= K &lt;= 30 1 &lt;= stones[i] &lt;= 100</p> \u601d\u8def <p>\u5165\u53c2k\u4e5f\u662f\u5b50\u72b6\u6001</p> <p>\u5047\u5982\u6709n\u9897\u77f3\u5934 1. \u7b2c\u4e00\u4e2a\u77f3\u5934\u53ef\u4ee5\u81ea\u6210\u4e00\u5806\uff0c\u540e\u9762\u7684\u77f3\u5934\u6784\u6210k-1\u5806 2. \u524dk\u4e2a\u77f3\u5934\u53ef\u4ee5\u6210\u4e00\u5806\uff0c\u540e\u9762\u7684\u77f3\u5934\u6784\u6210k-1\u5806 ... 3. \u524dn-k+1\u4e2a\u77f3\u5934\u53ef\u4ee5\u6210\u4e00\u5806\uff0c\u540e\u9762\u9884\u7559k-1\u9897\u6784\u6210k-1\u5806</p> <p>dp[i,j,k]\u8868\u8fbe[i,j]\u5806\u77f3\u5934\u4e2d\u7ec4\u6210k\u5806\u7684\u6700\u4f4e\u6210\u672c \u6240\u4ee5\u6709\u9012\u63a8\u516c\u5f0f(\u5176\u4e2di!=j)\uff1a</p> \\[ dp(i,j,1)= \\begin{cases}     dp(i,j,k)+sum(stone[i:j+1]), &amp; k=1, \\\\     min(dp(i,x,1)+dp(x+1,j,k-1)), &amp; k&gt;1 \\end{cases} \\] \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def mergeStones(self, stones: List[int], k: int) -&gt; int:\n        n = len(stones)\n        if (n - 1) % (k - 1):  # \u65e0\u6cd5\u5408\u5e76\u6210\u4e00\u5806\n            return -1\n        s = list(accumulate(stones, initial=0))  # \u524d\u7f00\u548c\n\n        @cache\n        def f(i,j,x):\n            if x==1:\n                return 0 if i==j else f(i,j,k)+s[j+1]-s[i]\n            res=0xffffffff\n            for t in range(i,j,k-1):\n                res=min(res,f(i,t,1)+f(t+1,j,x-1))\n            return res\n        return f(0,len(stones)-1,1)\n</code></pre>"},{"location":"LeetCode/dp/number/","title":"\u6570\u4f4dDP","text":""},{"location":"LeetCode/dp/number/#1","title":"\u81f3\u5c11\u6709 1 \u4f4d\u91cd\u590d\u7684\u6570\u5b57","text":"<p>\u7ed9\u5b9a\u6b63\u6574\u6570 n\uff0c\u8fd4\u56de\u5728 [1, n] \u8303\u56f4\u5185\u5177\u6709 \u81f3\u5c11 1 \u4f4d \u91cd\u590d\u6570\u5b57\u7684\u6b63\u6574\u6570\u7684\u4e2a\u6570\u3002</p> <p>\u793a\u4f8b 1\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 20\n\u8f93\u51fa\uff1a1\n\u89e3\u91ca\uff1a\u5177\u6709\u81f3\u5c11 1 \u4f4d\u91cd\u590d\u6570\u5b57\u7684\u6b63\u6570\uff08&lt;= 20\uff09\u53ea\u6709 11 \u3002\n</code></pre> <p>\u793a\u4f8b 2\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 100\n\u8f93\u51fa\uff1a10\n\u89e3\u91ca\uff1a\u5177\u6709\u81f3\u5c11 1 \u4f4d\u91cd\u590d\u6570\u5b57\u7684\u6b63\u6570\uff08&lt;= 100\uff09\u6709 11\uff0c22\uff0c33\uff0c44\uff0c55\uff0c66\uff0c77\uff0c88\uff0c99 \u548c 100 \u3002\n</code></pre> <p>\u793a\u4f8b 3\uff1a</p> <pre><code>\u8f93\u5165\uff1an = 1000\n\u8f93\u51fa\uff1a262\n</code></pre> <p>\u63d0\u793a\uff1a 1 &lt;= n &lt;= 109  </p> \u601d\u8def <p>\u6709\u72b6\u6001<code>dp(i,limit,choice)</code> \u5176\u4e2d<code>i</code>\u8868\u793a\u7b2c<code>i</code>\u4f4d <code>limit</code>\u8868\u793a\u524d<code>i-1</code>\u4f4d\u662f\u5426\u8ddf<code>n</code>\u7684\u524d<code>i-1</code>\u4f4d\u4e00\u6837 <code>choice</code>\u8868\u793a\u524d\u9762\u662f\u5426\u9009\u62e9\u8fc7  </p> \u793a\u4f8b\u4ee3\u7801 <pre><code>class Solution:\n    def numDupDigitsAtMostN(self, n: int) -&gt; int:\n        n=str(n)\n        @cache\n        def f(i,limit,choice):\n            if i==len(n):\n                return int(choice)\n            t=0\n            if not choice:\n                for x in range(1,10):\n                    t+=f(i+1,False,True)\n                return t+f(i+1,False,False)\n            else:\n\n                if limit:\n                    for x in range(int(n[i])):\n                        t+=f(i+1,False,True)\n                    return f(i+1,True,True)+t\n                else:\n                    for x in range(10):\n                        t+=f(i+1,False,True)\n                    return t\n        return f(0,True,True)+f(0,False,False)\n</code></pre>"},{"location":"MarkDown/HTML%E6%A0%87%E7%AD%BE/","title":"\u5c45\u4e2d","text":"<p>\u5c45\u4e2d</p>"},{"location":"MarkDown/HTML%E6%A0%87%E7%AD%BE/#_2","title":"\u5b57\u4f53","text":"<p> \u5b57\u4f53\u989c\u8272</p> <p> \u5b57\u4f53\u5927\u5c0f</p> <p> \u5b57\u4f53abc</p> <p> \u5b57\u4f53\u6837\u5f0f(\u504f\u659c\u4f53) </p> <p> \u5b57\u4f53\u6837\u5f0f(\u659c\u4f53)</p> <p> \u5b57\u4f53\u6837\u5f0f(\u7c97\u4f53)</p> <p> \u5b57\u4f53\u6837\u5f0f(\u7ec6\u4f53)</p>"},{"location":"MarkDown/HTML%E6%A0%87%E7%AD%BE/#_3","title":"\u6362\u884c","text":"<p>1   2</p>"},{"location":"MarkDown/HTML%E6%A0%87%E7%AD%BE/#_4","title":"\u8c03\u6574\u56fe\u7247\u5927\u5c0f","text":""},{"location":"MarkDown/HTML%E6%A0%87%E7%AD%BE/#_5","title":"\u5c45\u4e2d","text":""},{"location":"MarkDown/base64%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA/","title":"Base64\u56fe\u7247\u663e\u793a","text":""},{"location":"MarkDown/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","title":"\u4e00\u7ea7\u6807\u9898","text":""},{"location":"MarkDown/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_2","title":"\u4e8c\u7ea7\u6807\u9898","text":""},{"location":"MarkDown/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_3","title":"\u4e09\u7ea7\u6807\u9898","text":""},{"location":"MarkDown/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_4","title":"\u56db\u7ea7\u6807\u9898","text":""},{"location":"MarkDown/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_5","title":"\u4e94\u7ea7\u6807\u9898","text":""},{"location":"MarkDown/%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/#_6","title":"\u516d\u7ea7\u6807\u9898","text":"<p>\u6bb5\u843d\uff08\u4e24\u4e2a\u7a7a\u683c\u52a0\u56de\u8f66\uff09 \u6bb5\u843d\uff08\u5728\u6bb5\u843d\u4e0b\u9762\u52a0\u5206\u884c\uff09</p> <p>\u659c\u4f53\u6587\u672c \u659c\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c \u7c97\u659c\u4f53\u6587\u672c</p> <p>\u5206\u5272\u7ebf(\u4e09\u4e2a\u53ca\u4ee5\u4e0a\uff0c\u884c\u5185\u4e0d\u80fd\u6709\u5176\u4ed6\u4e1c\u897f\uff0c\u4e2d\u95f4\u53ef\u4ee5\u63d2\u5165\u7a7a\u683c)\uff1a</p> <p>~~\u5220\u9664\u7ebf~~</p> <p>\u4e0b\u5212\u7ebf</p> <ul> <li>\u65e0\u5e8f\u5217\u88681</li> <li>\u65e0\u5e8f\u5217\u88682</li> <li> <p>\u65e0\u5e8f\u5217\u88683</p> </li> <li> <p>\u65e0\u5e8f\u5217\u88681</p> </li> <li>\u65e0\u5e8f\u5217\u88682</li> <li> <p>\u65e0\u5e8f\u5217\u88683</p> </li> <li> <p>\u65e0\u5e8f\u5217\u88681</p> </li> <li>\u65e0\u5e8f\u5217\u88682</li> <li> <p>\u65e0\u5e8f\u5217\u88683</p> </li> <li> <p>\u6709\u5e8f\u5217\u88681</p> </li> <li>\u6709\u5e8f\u5217\u88682</li> <li>\u6709\u5e8f\u5217\u88683</li> </ul> <p>\u5217\u8868\u5d4c\u5957\uff08\u4f7f\u7528tab\uff09</p> <ol> <li>\u5217\u88681</li> <li>\u5217\u88681-1</li> <li>\u5217\u88681-2</li> <li>\u5217\u88682</li> </ol> <p>\u533a\u5757 \u533a\u5757 \u533a\u5757</p> <p>\u533a\u5757\u5d4c\u5957</p> <p>\u533a\u5757\u5d4c\u5957</p> <p>\u533a\u5757\u5d4c\u5957</p> <p>\u4ee3\u7801:<code>print()</code></p> <p>\u4ee3\u7801\u5757:</p> <pre><code>print(\"hello world\")\n</code></pre> <p>\u94fe\u63a5:\u767e\u5ea6</p> <p>\u76f4\u63a5\u4f7f\u7528\u94fe\u63a5\uff1ahttps://www.baidu.com</p> <p></p> \u8868\u5934 \u8868\u5934 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c \u5de6\u5bf9\u9f50 \u5c45\u4e2d\u5bf9\u9f50 \u53f3\u5bf9\u9f50 \u5355\u5143\u683c11111 \u5355\u5143\u683c111 \u5355\u5143\u683c11111 \u5355\u5143\u683c \u5355\u5143\u683c \u5355\u5143\u683c <p>\u884c\u5185\u663e\u793a\u516c\u5f0f\uff1a\\(a+b=c\\) \u884c\u5185\u663e\u793a\u516c\u5f0f\uff1a\\(a+b=c\\) \u5757\u5185\u663e\u793a\u516c\u5f0f\uff1a</p> \\[ a+b=c \\]"},{"location":"Python/","title":"Index","text":""},{"location":"Python/#1","title":"1. \u4ecb\u7ecd","text":"<pre><code>\u653e\u7f6ePython\u76f8\u5173\u6559\u7a0b\u6216\u8005\u811a\u672c\n</code></pre>"},{"location":"Python/#2","title":"2. \u4f7f\u7528\u6559\u7a0b","text":"<ol> <li>Python\u5b89\u88c5    <code>wget https://www.python.org/ftp/python/3.11.2/Python-3.11.2.tar.xz</code></li> <li>\u5b89\u88c5\u5305    <code>pip3 install sortedcontainers</code> <code>pip3 install numpy</code></li> </ol>"},{"location":"Python/#3","title":"3. \u4f9d\u8d56","text":""},{"location":"VSCode/","title":"Index","text":""},{"location":"VSCode/#1","title":"1. \u4ecb\u7ecd","text":"<pre><code>VS Code \u7684\u4e00\u4e9b\u914d\u7f6e\n</code></pre>"},{"location":"VSCode/#2","title":"2. \u4f7f\u7528\u6559\u7a0b","text":"<ol> <li>\u4e0b\u8f7dVS Code</li> </ol> <p>Visual Studio Code - Code Editing. Redefined 2. \u4e0b\u8f7d\u6269\u5c55</p> <ul> <li>C++\u76f8\u5173</li> <li>Python\u76f8\u5173</li> <li>CMake\u76f8\u5173</li> <li>Git Graph</li> <li>Office Viewer</li> <li>Jupyter</li> <li>Draw.io Integration</li> </ul>"},{"location":"VSCode/#3","title":"3. \u4f9d\u8d56","text":""},{"location":"VSCode/%E6%8A%80%E5%B7%A7/","title":"\u4f7f\u7528\u7cfb\u7edf\u7ec8\u7aef(\u6709\u8865\u9f50)","text":"<p>`ctrl+shift+``</p>"},{"location":"VSCode/%E6%8A%80%E5%B7%A7/#gitee-pushpull","title":"gitee \u5728push/pull\u4ee3\u7801\u65f6\u4e0d\u7528\u8f93\u5165\u8d26\u53f7\u5bc6\u7801","text":"<p>\u6253\u5f00\u7ec8\u7aef\u540e\u8f93\u5165\u4e0b\u884c\u4ee3\u7801\u3001\u7136\u540e\u91cd\u542f\uff08\u518d\u6b21\u63d0\u4ea4\u9879\u76ee\u53ef\u80fd\u4f1a\u8ba9\u4f60\u8f93\u5165\u8d26\u53f7\u5bc6\u7801\uff0c\u4e0b\u4e00\u6b21\u63d0\u4ea4\u4fbf\u4e0d\u9700\u8981 <code>git config --global credential.helper store</code></p>"},{"location":"VSCode/%E9%97%AE%E9%A2%98/","title":"Python\u8bed\u6cd5\u9ad8\u4eae\u4e0d\u663e\u793a","text":"<p>TODO \u63d2\u56fe \u89e3\u51b3\u65b9\u6848: \u6062\u590dVSCode\u7684\u8bbe\u7f6e  </p> <p></p>"},{"location":"VSCode/%E9%97%AE%E9%A2%98/#_1","title":"\u7ec8\u7aef\u6ca1\u6709\u8865\u9f50\u529f\u80fd","text":"<ol> <li>\u5728<code>settings.json</code>\u6587\u4ef6\u6dfb\u52a0 <pre><code>{\n\"terminal.integrated.defaultProfile.linux\": \"bash\",\n}\n2. \u5173\u95ed\u5e76\u91cd\u542f\u7ec8\u7aef\n</code></pre></li> </ol>"},{"location":"Web/Docsify/","title":"Index","text":""},{"location":"Web/Docsify/#1","title":"1. \u4ecb\u7ecd","text":"<pre><code>\u672c\u610f\u662f\u5229\u7528**docsify**\u521b\u5efa\u9605\u8bfbmarkdown\u7684\u7f51\u9875\n</code></pre>"},{"location":"Web/Docsify/#2","title":"2. \u57fa\u7840","text":"<ol> <li>\u4e0b\u8f7dnode.js <code>sudo apt-get install nodejs</code> <code>sudo apt-get install npm</code></li> <li>\u5168\u5c40\u5b89\u88c5 docsify-cli \u5de5\u5177 <code>npm i docsify-cli -g</code></li> <li>\u521d\u59cb\u5316\u6587\u6863\u7ed3\u6784 <code>docsify init ./docs</code> <p>\u521d\u59cb\u5316\u6210\u529f\u540e\uff0c./docs\u76ee\u5f55\u4e0b\u4f1a\u521b\u5efa\u4ee5\u4e0b\u51e0\u4e2a\u6587\u4ef6\uff1a</p> <pre><code>-| docs/\n   -| .nojekyll \u7528\u4e8e\u963b\u6b62 GitHub Pages \u5ffd\u7565\u6389\u4e0b\u5212\u7ebf\u5f00\u5934\u7684\u6587\u4ef6\n   -| index.html \u5165\u53e3\u6587\u4ef6\n   -| README.md \u4f1a\u505a\u4e3a\u4e3b\u9875\u5185\u5bb9\u6e32\u67d3\n</code></pre> </li> <li>\u672c\u5730\u5b9e\u65f6\u9884\u89c8     <code>docsify serve ./docs</code>     &gt; \u542f\u52a8\u4e00\u4e2a\u672c\u5730\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u5b9e\u65f6\u9884\u89c8\u6548\u679c\u3002\u9ed8\u8ba4\u8bbf\u95ee\u5730\u5740\u4e3a\uff1a http://localhost:3000</li> </ol>"},{"location":"Web/Docsify/#1_1","title":"1. \u4f9d\u8d56","text":""},{"location":"Web/MKDocs/","title":"Index","text":""},{"location":"Web/MKDocs/#1","title":"1. \u5b89\u88c5","text":"<p>\u6211\u76f4\u63a5\u4f7f\u7528MKDocs\u7684\u4e3b\u9898\uff1a<code>material</code> <code>material</code>\u7684\u5b89\u88c5\u94fe\u63a5\uff1a[\u94fe\u63a5]https://squidfunk.github.io/mkdocs-material/getting-started/)</p>"},{"location":"Web/MKDocs/#2","title":"2. \u914d\u7f6e","text":"<ol> <li>\u521d\u59cb\u5316\uff1ahttps://squidfunk.github.io/mkdocs-material/creating-your-site/</li> <li>\u914d\u7f6e\uff1ahttps://squidfunk.github.io/mkdocs-material/setup/changing-the-colors/</li> </ol>"},{"location":"Web/MKDocs/#3","title":"3. \u90e8\u7f72","text":"<p>\u90e8\u7f72\u6559\u7a0b\uff1a\u94fe\u63a5(\u6211\u4f7f\u7528github\u53bb\u90e8\u7f72)</p>"}]}